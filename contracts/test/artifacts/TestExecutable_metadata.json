{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_timer",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "IDENTIFIER",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "aBytes",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "aNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_coord",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "_subIdentifier",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "_subImplementation",
						"type": "address"
					}
				],
				"name": "addSub",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "anAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_index",
						"type": "address"
					}
				],
				"name": "encodeAddress",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_input",
						"type": "bool"
					}
				],
				"name": "encodeBool",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_number",
						"type": "uint256"
					}
				],
				"name": "encodeBytes",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_string",
						"type": "string"
					}
				],
				"name": "encodeBytes32",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_key",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "_index",
						"type": "address"
					}
				],
				"name": "encodeKeyAddress",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_exeID",
						"type": "bytes32"
					}
				],
				"name": "isExecutable",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_aBytes",
						"type": "bytes32"
					}
				],
				"name": "setBytes",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "setCurrentTime",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_aNumber",
						"type": "uint256"
					}
				],
				"name": "setNumber",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "timerAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getCurrentTime()": {
					"returns": {
						"_0": "uint for the current Testable timestamp."
					}
				},
				"setCurrentTime(uint256)": {
					"details": "Will revert if not running in test mode.",
					"params": {
						"time": "timestamp to set current Testable time to."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getCurrentTime()": {
					"notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
				},
				"setCurrentTime(uint256)": {
					"notice": "Sets the current time."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/test/TestExecutable.sol": "TestExecutable"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/interfaces/ICoord.sol": {
			"keccak256": "0xfec2e677c6ba06645a75980b0c19259bf2ef5309600305e045b4e95dd463aeff",
			"license": "MIT",
			"urls": [
				"bzz-raw://af7898105d948633ba66fee8e5067659430995a9950dc5f61a10246737c77370",
				"dweb:/ipfs/QmTT5bc1uvsyrfUxndjvS5zYbPg9pKuwNDvTLXCnY7Egj1"
			]
		},
		"contracts/test/TestExecutable.sol": {
			"keccak256": "0x5ea26f26da4b707a5262d4e1575b98d73eec645068c57b95e373bf8b49b32246",
			"license": "MIT",
			"urls": [
				"bzz-raw://45934afd47f74ccb76e093d961c1f089d7969cf06593be7f76ae55a49ebb94e8",
				"dweb:/ipfs/QmadfUDx78VLUqfPmwYEkDjpDJCMYcsRDrtzLLbKNNeqjY"
			]
		},
		"contracts/test/Testable.sol": {
			"keccak256": "0xcc1cab5712de60230bfaa8b17f38365873b2d89a838a19acc417aef68490988c",
			"license": "MIT",
			"urls": [
				"bzz-raw://63700062ec761043590a9325d60dd321f56eb2635c050ad972c5399940bbe7d2",
				"dweb:/ipfs/QmWnjYoMsn75YBBZ9DHaAkzBVVDJWJNzHz7N2WhRqFH3kr"
			]
		},
		"contracts/test/Timer.sol": {
			"keccak256": "0x832393287482772ef054c22496f0b5481109fbd4015827f29252c4fd2ed3e418",
			"license": "MIT",
			"urls": [
				"bzz-raw://f9401dcc8c95d4b48f59d66387f7338e8d748150fe9a536182ef4165499f5a02",
				"dweb:/ipfs/QmbTxc3gBSCxFwRysgBZKhC3Ms4eDZR285ihAi6yxgX8uZ"
			]
		}
	},
	"version": 1
}