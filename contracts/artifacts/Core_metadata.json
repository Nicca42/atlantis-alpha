{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "key",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldImplementation",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					}
				],
				"name": "ImplementationChanged",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "IDENTIFIER",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_key",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "_instance",
						"type": "address"
					}
				],
				"name": "addContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_key",
						"type": "bytes32"
					}
				],
				"name": "deleteContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_exeID",
						"type": "bytes32"
					}
				],
				"name": "execute",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_key",
						"type": "bytes32"
					}
				],
				"name": "getInstance",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_coord",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_executables",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_props",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_voteWeight",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_votingBooth",
						"type": "address"
					}
				],
				"name": "initialise",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_key",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "_instance",
						"type": "address"
					}
				],
				"name": "updateContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Veronica | @Nicca42 - GitHub | @vonnie610 - Twitter",
			"kind": "dev",
			"methods": {
				"execute(bytes32)": {
					"params": {
						"_exeID": "ID of executable."
					}
				}
			},
			"title": "Core DAO contract for an Atlantis DAO.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"execute(bytes32)": {
					"notice": "Executes the passed executable. The executable needs to be          marked as executable on the coordinator. If the exe ID is not          approved for execution on the coordinator the transaction will          fail."
				}
			},
			"notice": "This contract is incredibly simple with very limited functionality.          The \"business logic\" (voting, proposals, consensus etc) is done          elsewhere, meaning the core contract will not need to be upgraded to          increase functionality.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Core.sol": "Core"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Core.sol": {
			"keccak256": "0x20020e36c0f2b3b8ec200c08d6eccd85d0f47c98e87ebee1acf1d143a07a37d4",
			"license": "MIT",
			"urls": [
				"bzz-raw://e73aa6792b7961343cab9010c42f52b1389fafe2184cf2d4bd2632638fab705f",
				"dweb:/ipfs/QmSnUMTm2W6LspMRA9wi5aX152L3j1GhuJEvWD1KezEDe7"
			]
		},
		"contracts/CoreLib.sol": {
			"keccak256": "0xdfa4c55ebc4aa961f7c6015b1208eb05afe84013a1c4d69f6e433280c39c681d",
			"license": "MIT",
			"urls": [
				"bzz-raw://6de52402345cf1b441e9915b93d00846f3b936e7d3a340e057652cdf09daf0cb",
				"dweb:/ipfs/QmVkqhqMfgXTdu39j8iYUhCChJWQrjEq4dGk5gTVwAbtvA"
			]
		},
		"contracts/interfaces/ICoord.sol": {
			"keccak256": "0xfec2e677c6ba06645a75980b0c19259bf2ef5309600305e045b4e95dd463aeff",
			"license": "MIT",
			"urls": [
				"bzz-raw://af7898105d948633ba66fee8e5067659430995a9950dc5f61a10246737c77370",
				"dweb:/ipfs/QmTT5bc1uvsyrfUxndjvS5zYbPg9pKuwNDvTLXCnY7Egj1"
			]
		},
		"contracts/interfaces/IExe.sol": {
			"keccak256": "0x939ba072bc6f10dedc3e67512c18635fb9ef44463e54d3b4e23eceafaaf58277",
			"license": "MIT",
			"urls": [
				"bzz-raw://563238823dd3eb057f43cbc5b2c7e73ea50730b2ee7f21f7f748dd1ca33dcd46",
				"dweb:/ipfs/QmcM2PBc2uip7QnDyqFYFEuwHfZBSML5uc8tw6T4fiYJhJ"
			]
		},
		"contracts/openZeppelin/Initializable.sol": {
			"keccak256": "0xc2c843c604c41fa6f583fca49458ed9682220f2833d8d9ad2c3f13c4b34732b6",
			"license": "MIT",
			"urls": [
				"bzz-raw://04b2502a1ea90927af6a9ee951d3a43af8419e45dba3b30b06589a8bd12470ea",
				"dweb:/ipfs/QmQvFuYk3b2aRBdaQieWz9tNuz14A5bEQLUcRSp55FbGH1"
			]
		}
	},
	"version": 1
}