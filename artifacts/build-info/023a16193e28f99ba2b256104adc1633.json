{
  "id": "023a16193e28f99ba2b256104adc1633",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.7",
  "solcLongVersion": "0.8.7+commit.e28d00a7",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/VoteWeight.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\nimport \"./BaseSystem.sol\";\nimport \"./openZeppelin/IERC20.sol\";\n\n// Use ERC20Votes for snapshot token balances\n\ncontract VoteWeight is BaseSystem, IWeight {\n    //--------------------------------------------------------------------------\n    // STATE\n    //--------------------------------------------------------------------------\n\n    IERC20 private govToken_;\n    IERC20 private repToken_;\n\n    //--------------------------------------------------------------------------\n    // CONSTRUCTOR\n    //--------------------------------------------------------------------------\n\n    constructor(address _core, address _timer)\n        BaseSystem(CoreLib.VOTE_WEIGHT, _core, _timer)\n    {}\n\n    function initialise(address _govToken, address _repToken)\n        external\n        initializer\n    {\n        govToken_ = IERC20(_govToken);\n        repToken_ = IERC20(_repToken);\n\n        // FUTURE turn into registry like voting booth\n        // use library for vote weight? Then can have multiple\n    }\n\n    //--------------------------------------------------------------------------\n    // VIEW & PURE FUNCTIONS\n    //--------------------------------------------------------------------------\n\n    /**\n     * @param   _propID This lets the vote weight get the correct snapshot for\n     *          each proposal.\n     * @param   _voter Address of the voter.\n     * @notice  The vote weight of the _voter is a simple equation of their\n     *          governance and reputation token:\n     *          vote_weight = (gov_token * rep_token) / 2\n     */\n    function getVoteWeight(uint256 _propID, address _voter)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        // TODO if first check for a prop make snapshot\n        // NOTE does it not make more sense to do the snapshot here??\n        // Nope. Need to snapshot at proposal for flash loans :/\n\n        uint256 voteWeight = govToken_.balanceOf(_voter) +\n            repToken_.balanceOf(_voter);\n\n        // return(voteWeight == 0 ? 0 : voteWeight / 2);\n        if (voteWeight == 0) {\n            return 0;\n        } else {\n            return voteWeight;\n        }\n    }\n\n    function getTotalWeight(uint256 _propID) external view override returns (uint256) {\n        // TODO this should use the snapshot. Super insecure to do it like this\n        uint256 total = govToken_.totalSupply() + repToken_.totalSupply();\n        return total;\n    }\n}\n"
      },
      "contracts/BaseSystem.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\nimport \"./CoreLib.sol\";\nimport \"./interfaces/ICore.sol\";\nimport \"./interfaces/ICoord.sol\";\nimport \"./interfaces/IProp.sol\";\nimport \"./interfaces/IExe.sol\";\nimport \"./interfaces/IBooth.sol\";\nimport \"./interfaces/IWeight.sol\";\nimport \"./votingTypes/IVoteType.sol\";\nimport \"./openZeppelin/Initializable.sol\";\nimport \"./test/Testable.sol\";\n\nabstract contract BaseSystem is Initializable, Testable {\n    bytes32 immutable public IDENTIFIER;\n\n    ICore immutable public core_;\n\n    modifier onlyCore() {\n        require(ICore(msg.sender) == core_, \"System: Only core can modify\");\n        _;\n    }\n\n    constructor(bytes32 _key, address _core, address _timer) Testable(_timer) {\n        IDENTIFIER = _key;\n        core_ = ICore(_core);\n    }\n}"
      },
      "contracts/openZeppelin/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "contracts/CoreLib.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\nlibrary CoreLib {\n    bytes32 constant public CORE = keccak256(\"CORE\");\n    bytes32 constant public COORD = keccak256(\"COORDINATOR\");\n    bytes32 constant public EXE = keccak256(\"EXECUTABLES\");\n    bytes32 constant public PROPS = keccak256(\"PROPOSALS\");\n    bytes32 constant public VOTE_BOOTH = keccak256(\"VOTING_BOOTH\");\n    bytes32 constant public VOTE_WEIGHT = keccak256(\"VOTE_WEIGHT\");\n}"
      },
      "contracts/interfaces/ICore.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ninterface ICore {\n    function getInstance(bytes32 _key) external view returns (address);\n\n    function IDENTIFIER() external view returns(bytes32);\n}"
      },
      "contracts/interfaces/ICoord.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ninterface ICoord {\n    function getSubSystem(address _system, bytes32 _subIdentifier)\n        external\n        view\n        returns (address);\n\n    function isVotable(uint256 _propID) external view returns (bool);\n\n    function addSubSystem(bytes32 _subIdentifier, address _subImplementation)\n        external;\n\n    function voting(uint256 _propID) external;\n\n    /**\n     * @param   _exeID ID of the executable to check.\n     * @notice  This function will check that the specified proposal has reached\n     *          quorum, and that it has passed. If the proposal has not reached\n     *          quorum or has not passed this will return false.\n     * @dev     The reason we use Exe IDs here and not Prop IDs is that\n     *          executables may be valid for execution outside of a proposal\n     *          (e.g an approved recurring payment). If the exe is tied to a\n     *          proposal the coordinator will be able to look up and verify it's\n     *          executable status.\n     */\n    function isExecutable(bytes32 _exeID) external view returns (bool);\n\n    function setExecute(bytes32 _exeID) external;\n}"
      },
      "contracts/interfaces/IProp.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ninterface IProp {\n    function getVoteType(uint256 _propID) external view returns (address);\n\n    enum PropStatus {\n        NO_PROP,\n        CREATED,\n        VOTING,\n        QUEUED,\n        EXECUTED,\n        EXPIRED,\n        DEFEATED\n        // Only successful props can be queued, no need for a state.\n    }\n\n    function getPropVotables(uint256 _propID)\n        external\n        view\n        returns (\n            PropStatus state,\n            uint256 voteStart,\n            uint256 voteEnd,\n            bool executedOrCanceled\n        );\n\n    function getPropOfExe(bytes32 _exeID) external view returns (uint256);\n\n    function propVoting(uint256 _propID) external;\n\n    function propExpire(uint256 _propID) external;\n\n    function propDefeated(uint256 _propID) external;\n\n    function propQueued(uint256 _propID) external;\n\n    function propExecuted(uint256 _propID) external;\n}"
      },
      "contracts/interfaces/IExe.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ninterface IExe {\n    /**\n     * @param   _exeID ID of the executable to get the data of.\n     * @return  targets The array of target addresses.\n     * @return  callData The array of calldata to execute at each address.\n     * @return  values The array of values (in native tokens) to pass through\n     *          with each call. Note that these values are outside of any gas\n     *          requirements and costs.\n     */\n    function getExe(bytes32 _exeID)\n        external\n        view\n        returns (\n            address[] memory targets,\n            bytes[] memory callData,\n            uint256[] memory values\n        );\n\n    function createPropExe(\n        uint256 _propID,\n        bytes32 _exeID,\n        string memory _description\n    ) external returns (bytes32 propExeID);\n}"
      },
      "contracts/interfaces/IBooth.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ninterface IBooth {\n    function consensusReached(uint256 _propID)\n        external\n        view\n        returns (bool reached, bool votePassed);\n}"
      },
      "contracts/interfaces/IWeight.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ninterface IWeight {\n    function getVoteWeight(uint256 _propID, address _voter)\n        external\n        returns (uint256);\n\n    function getTotalWeight(uint256 _propID) external view returns (uint256);\n}"
      },
      "contracts/votingTypes/IVoteType.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\ninterface IVoteType {\n    function vote(uint256 _propID, bytes memory _vote, address _voter) external returns(bool);\n\n    function consensusReached(uint256 _propID)\n        external\n        view\n        returns (bool reached, bool votePassed);\n}"
      },
      "contracts/openZeppelin/Initializable.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\n//------------------------------------------------------------------------------\n// MOSTLY TAKEN FROM OPEN ZEPPELIN.\n//------------------------------------------------------------------------------\n// Has been modified so that only the deployer can initialise the contract.\n// This prevents malicious addresses from \"stealing\" the contract by\n// initialising it with incorrect parameters.\n//------------------------------------------------------------------------------\n\n/**\n * @dev     This is a base contract to aid in writing upgradeable contracts, or \n *          any kind of contract that will be deployed behind a proxy. Since a \n *          proxied contract can't have a constructor, it's common to move \n *          constructor logic to an external initializer function, usually \n *          called `initialize`. It then becomes necessary to protect this \n *          initializer function so it can only be called once. The \n *          {initializer} modifier provided by this contract will have this \n *          effect.\n *\n * TIP:     To avoid leaving the proxy in an uninitialized state, the \n *          initializer function should be called as early as possible by \n *          providing the encoded function call as the `_data` argument to \n *          {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke \n *          a parent initializer twice, or to ensure that all initializers are \n *          idempotent. This is not verified automatically as constructors are \n *          by Solidity.\n */\nabstract contract Initializable {\n    // Indicates that the contract has been initialized.\n    bool private initialized_;\n\n    // Indicates that the contract is in the process of being initialized.\n    bool private initializing_;\n\n    // Deployer address so that only deployer can initialise preventing \n    // malicious contract initialising.\n    address private deployer_;\n    // NOTE may need to remove this? Needs more thinking\n\n    constructor() {\n        deployer_ = msg.sender;\n    }\n\n    /**\n     * @dev     Modifier to protect an initializer function from being invoked \n     *          twice. Has been modified so only deployer can initialise. \n     */\n    modifier initializer() {\n        require(\n            initializing_ || !initialized_,\n            \"Init: Contract is initialized\"\n        );\n        require(msg.sender == deployer_, \"Init: Only deployer can init\");\n\n        bool isTopLevelCall = !initializing_;\n\n        if (isTopLevelCall) {\n            initializing_ = true;\n            initialized_ = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            initializing_ = false;\n        }\n    }\n}\n"
      },
      "contracts/test/Testable.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\nimport \"./Timer.sol\";\n\n/**\n * @title Base class that provides time overrides, but only if being run in test mode.\n */\nabstract contract Testable {\n    // If the contract is being run in production, then `timerAddress` will be the 0x0 address.\n    // Note: this variable should be set on construction and never modified.\n    address public timerAddress;\n\n    /**\n     * @notice Constructs the Testable contract. Called by child contracts.\n     * @param _timerAddress Contract that stores the current time in a testing environment.\n     * Must be set to 0x0 for production environments that use live time.\n     */\n    constructor(address _timerAddress) {\n        timerAddress = _timerAddress;\n    }\n\n    /**\n     * @notice Reverts if not running in test mode.\n     */\n    modifier onlyIfTest {\n        require(timerAddress != address(0x0));\n        _;\n    }\n\n    /**\n     * @notice Sets the current time.\n     * @dev Will revert if not running in test mode.\n     * @param time timestamp to set current Testable time to.\n     */\n    function setCurrentTime(uint256 time) external onlyIfTest {\n        Timer(timerAddress).setCurrentTime(time);\n    }\n\n    /**\n     * @notice Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode.\n     * Otherwise, it will return the block timestamp.\n     * @return uint for the current Testable timestamp.\n     */\n    function getCurrentTime() public view returns (uint256) {\n        if (timerAddress != address(0x0)) {\n            return Timer(timerAddress).getCurrentTime();\n        } else {\n            return block.timestamp; // solhint-disable-line not-rely-on-time\n        }\n    }\n}"
      },
      "contracts/test/Timer.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\n/**\n * @title Universal store of current contract time for testing environments.\n */\ncontract Timer {\n    uint256 private currentTime;\n\n    constructor() {\n        currentTime = block.timestamp; // solhint-disable-line not-rely-on-time\n    }\n\n    /**\n     * @notice Sets the current time.\n     * @dev Will revert if not running in test mode.\n     * @param time timestamp to set `currentTime` to.\n     */\n    function setCurrentTime(uint256 time) external {\n        currentTime = time;\n    }\n\n    /**\n     * @notice Gets the currentTime variable set in the Timer.\n     * @return uint256 for the current Testable timestamp.\n     */\n    function getCurrentTime() public view returns (uint256) {\n        return currentTime;\n    }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "devdoc",
            "userdoc"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/BaseSystem.sol": {
        "BaseSystem": {
          "abi": [
            {
              "inputs": [],
              "name": "IDENTIFIER",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "core_",
              "outputs": [
                {
                  "internalType": "contract ICore",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "setCurrentTime",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timerAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "getCurrentTime()": {
                "returns": {
                  "_0": "uint for the current Testable timestamp."
                }
              },
              "setCurrentTime(uint256)": {
                "details": "Will revert if not running in test mode.",
                "params": {
                  "time": "timestamp to set current Testable time to."
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "IDENTIFIER()": "3c9747f3",
              "core_()": "eaddd0fd",
              "getCurrentTime()": "29cb924d",
              "setCurrentTime(uint256)": "22f8e566",
              "timerAddress()": "1c39c38d"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "getCurrentTime()": {
                "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
              },
              "setCurrentTime(uint256)": {
                "notice": "Sets the current time."
              }
            },
            "version": 1
          }
        }
      },
      "contracts/CoreLib.sol": {
        "CoreLib": {
          "abi": [
            {
              "inputs": [],
              "name": "COORD",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "CORE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EXE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PROPS",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "VOTE_BOOTH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "VOTE_WEIGHT",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "610267610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80630bd8922d14610071578063296425b51461008f5780636b6c0774146100ad5780639a39718b146100cb578063d082009d146100e9578063e9b6795814610107575b600080fd5b610079610125565b604051610086919061020c565b60405180910390f35b610097610149565b6040516100a4919061020c565b60405180910390f35b6100b561016d565b6040516100c2919061020c565b60405180910390f35b6100d3610191565b6040516100e0919061020c565b60405180910390f35b6100f16101b5565b6040516100fe919061020c565b60405180910390f35b61010f6101d9565b60405161011c919061020c565b60405180910390f35b7fd578563424ab02f85ec03c6b1aee04947ebdd4a30db46cba3bcd7f56ef40b19981565b7fcdd7ba10b36b7349d5c9710e5e447ec8acaa8e3cbba8d20f4393eccf61f185b181565b7f907208bc2088fa777f18b43edd8b766e7243504cf8497f7ed936c65c7a446bbc81565b7f346b2ab3a980432fd8f2e24828fc9f9ee2df1548701bc542f6ec17882b32762781565b7f36209a57dfd79e3872ec3a0c88c653bbe7e32a12306e5e1f92f118c1936ae8b281565b7f59e2d72f5870ccddd14d35394bd3c22374071b2da7c07a3d6c3b690400b7362881565b61020681610227565b82525050565b600060208201905061022160008301846101fd565b92915050565b600081905091905056fea2646970667358221220db1c9af793b17dae82b2e5ad36bbcc47430a9c333cb0487df3a6ae346ef625f364736f6c63430008070033",
              "opcodes": "PUSH2 0x267 PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD8922D EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x296425B5 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x6B6C0774 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x9A39718B EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD082009D EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE9B67958 EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0xD578563424AB02F85EC03C6B1AEE04947EBDD4A30DB46CBA3BCD7F56EF40B199 DUP2 JUMP JUMPDEST PUSH32 0xCDD7BA10B36B7349D5C9710E5E447EC8ACAA8E3CBBA8D20F4393ECCF61F185B1 DUP2 JUMP JUMPDEST PUSH32 0x907208BC2088FA777F18B43EDD8B766E7243504CF8497F7ED936C65C7A446BBC DUP2 JUMP JUMPDEST PUSH32 0x346B2AB3A980432FD8F2E24828FC9F9EE2DF1548701BC542F6EC17882B327627 DUP2 JUMP JUMPDEST PUSH32 0x36209A57DFD79E3872EC3A0C88C653BBE7E32A12306E5E1F92F118C1936AE8B2 DUP2 JUMP JUMPDEST PUSH32 0x59E2D72F5870CCDDD14D35394BD3C22374071B2DA7C07A3D6C3B690400B73628 DUP2 JUMP JUMPDEST PUSH2 0x206 DUP2 PUSH2 0x227 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x221 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SHR SWAP11 0xF7 SWAP4 0xB1 PUSH30 0xAE82B2E5AD36BBCC47430A9C333CB0487DF3A6AE346EF625F364736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
              "sourceMap": "56:391:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@COORD_70": {
                  "entryPoint": 293,
                  "id": 70,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@CORE_65": {
                  "entryPoint": 365,
                  "id": 65,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@EXE_75": {
                  "entryPoint": 473,
                  "id": 75,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@PROPS_80": {
                  "entryPoint": 437,
                  "id": 80,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@VOTE_BOOTH_85": {
                  "entryPoint": 401,
                  "id": 85,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@VOTE_WEIGHT_90": {
                  "entryPoint": 329,
                  "id": 90,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_encode_t_bytes32_to_t_bytes32_fromStack_library": {
                  "entryPoint": 509,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed": {
                  "entryPoint": 524,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_bytes32": {
                  "entryPoint": 551,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:463:14",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "80:53:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "97:3:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "120:5:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "102:17:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "102:24:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "90:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "90:37:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "90:37:14"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack_library",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "68:5:14",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "75:3:14",
                            "type": ""
                          }
                        ],
                        "src": "7:126:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "245:132:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "255:26:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "267:9:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "278:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "263:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "263:18:14"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "255:4:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "343:6:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "356:9:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "367:1:14",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "352:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "352:17:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack_library",
                                  "nodeType": "YulIdentifier",
                                  "src": "291:51:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "291:79:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "291:79:14"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "217:9:14",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "229:6:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "240:4:14",
                            "type": ""
                          }
                        ],
                        "src": "139:238:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "428:32:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "438:16:14",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "449:5:14"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "438:7:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "410:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "420:7:14",
                            "type": ""
                          }
                        ],
                        "src": "383:77:14"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
                  "id": 14,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80630bd8922d14610071578063296425b51461008f5780636b6c0774146100ad5780639a39718b146100cb578063d082009d146100e9578063e9b6795814610107575b600080fd5b610079610125565b604051610086919061020c565b60405180910390f35b610097610149565b6040516100a4919061020c565b60405180910390f35b6100b561016d565b6040516100c2919061020c565b60405180910390f35b6100d3610191565b6040516100e0919061020c565b60405180910390f35b6100f16101b5565b6040516100fe919061020c565b60405180910390f35b61010f6101d9565b60405161011c919061020c565b60405180910390f35b7fd578563424ab02f85ec03c6b1aee04947ebdd4a30db46cba3bcd7f56ef40b19981565b7fcdd7ba10b36b7349d5c9710e5e447ec8acaa8e3cbba8d20f4393eccf61f185b181565b7f907208bc2088fa777f18b43edd8b766e7243504cf8497f7ed936c65c7a446bbc81565b7f346b2ab3a980432fd8f2e24828fc9f9ee2df1548701bc542f6ec17882b32762781565b7f36209a57dfd79e3872ec3a0c88c653bbe7e32a12306e5e1f92f118c1936ae8b281565b7f59e2d72f5870ccddd14d35394bd3c22374071b2da7c07a3d6c3b690400b7362881565b61020681610227565b82525050565b600060208201905061022160008301846101fd565b92915050565b600081905091905056fea2646970667358221220db1c9af793b17dae82b2e5ad36bbcc47430a9c333cb0487df3a6ae346ef625f364736f6c63430008070033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD8922D EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x296425B5 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x6B6C0774 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x9A39718B EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD082009D EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE9B67958 EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0xD578563424AB02F85EC03C6B1AEE04947EBDD4A30DB46CBA3BCD7F56EF40B199 DUP2 JUMP JUMPDEST PUSH32 0xCDD7BA10B36B7349D5C9710E5E447EC8ACAA8E3CBBA8D20F4393ECCF61F185B1 DUP2 JUMP JUMPDEST PUSH32 0x907208BC2088FA777F18B43EDD8B766E7243504CF8497F7ED936C65C7A446BBC DUP2 JUMP JUMPDEST PUSH32 0x346B2AB3A980432FD8F2E24828FC9F9EE2DF1548701BC542F6EC17882B327627 DUP2 JUMP JUMPDEST PUSH32 0x36209A57DFD79E3872EC3A0C88C653BBE7E32A12306E5E1F92F118C1936AE8B2 DUP2 JUMP JUMPDEST PUSH32 0x59E2D72F5870CCDDD14D35394BD3C22374071B2DA7C07A3D6C3B690400B73628 DUP2 JUMP JUMPDEST PUSH2 0x206 DUP2 PUSH2 0x227 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x221 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SHR SWAP11 0xF7 SWAP4 0xB1 PUSH30 0xAE82B2E5AD36BBCC47430A9C333CB0487DF3A6AE346EF625F364736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
              "sourceMap": "56:391:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;132:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;382:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;78:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;314:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;254:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;194;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;132:56;164:24;132:56;:::o;382:62::-;420:24;382:62;:::o;78:48::-;109:17;78:48;:::o;314:62::-;351:25;314:62;:::o;254:54::-;286:22;254:54;:::o;194:::-;224:24;194:54;:::o;7:126:14:-;102:24;120:5;102:24;:::i;:::-;97:3;90:37;7:126;;:::o;139:238::-;240:4;278:2;267:9;263:18;255:26;;291:79;367:1;356:9;352:17;343:6;291:79;:::i;:::-;139:238;;;;:::o;383:77::-;420:7;449:5;438:16;;383:77;;;:::o"
            },
            "methodIdentifiers": {
              "COORD()": "0bd8922d",
              "CORE()": "6b6c0774",
              "EXE()": "e9b67958",
              "PROPS()": "d082009d",
              "VOTE_BOOTH()": "9a39718b",
              "VOTE_WEIGHT()": "296425b5"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/VoteWeight.sol": {
        "VoteWeight": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_core",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_timer",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "IDENTIFIER",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "core_",
              "outputs": [
                {
                  "internalType": "contract ICore",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "getTotalWeight",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_voter",
                  "type": "address"
                }
              ],
              "name": "getVoteWeight",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_govToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_repToken",
                  "type": "address"
                }
              ],
              "name": "initialise",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "setCurrentTime",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timerAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "getCurrentTime()": {
                "returns": {
                  "_0": "uint for the current Testable timestamp."
                }
              },
              "getVoteWeight(uint256,address)": {
                "params": {
                  "_propID": "This lets the vote weight get the correct snapshot for          each proposal.",
                  "_voter": "Address of the voter."
                }
              },
              "setCurrentTime(uint256)": {
                "details": "Will revert if not running in test mode.",
                "params": {
                  "time": "timestamp to set current Testable time to."
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_119": {
                  "entryPoint": null,
                  "id": 119,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_476": {
                  "entryPoint": null,
                  "id": 476,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_538": {
                  "entryPoint": null,
                  "id": 538,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_57": {
                  "entryPoint": null,
                  "id": 57,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "abi_decode_t_address_fromMemory": {
                  "entryPoint": 290,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address_fromMemory": {
                  "entryPoint": 311,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 375,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 393,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 425,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 430,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1355:14",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:14"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:14"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:14",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:14",
                            "type": ""
                          }
                        ],
                        "src": "7:143:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "250:413:14",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "296:83:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "298:77:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "298:79:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "298:79:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "271:7:14"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "280:9:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "267:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "267:23:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "292:2:14",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "263:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "263:32:14"
                              },
                              "nodeType": "YulIf",
                              "src": "260:119:14"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "389:128:14",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "404:15:14",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "418:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "408:6:14",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "433:74:14",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "479:9:14"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "490:6:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "475:3:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "475:22:14"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "499:7:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "443:31:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "443:64:14"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "433:6:14"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "527:129:14",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "542:16:14",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "556:2:14",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "546:6:14",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "572:74:14",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "618:9:14"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "629:6:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "614:3:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "614:22:14"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "638:7:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "582:31:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "582:64:14"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "572:6:14"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "212:9:14",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "223:7:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "235:6:14",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "243:6:14",
                            "type": ""
                          }
                        ],
                        "src": "156:507:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "709:35:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "719:19:14",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "735:2:14",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "729:5:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "729:9:14"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "719:6:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "702:6:14",
                            "type": ""
                          }
                        ],
                        "src": "669:75:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "795:51:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "805:35:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "834:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "816:17:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "816:24:14"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "805:7:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "777:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "787:7:14",
                            "type": ""
                          }
                        ],
                        "src": "750:96:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "897:81:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "907:65:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "922:5:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "929:42:14",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "918:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "918:54:14"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "907:7:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "879:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "889:7:14",
                            "type": ""
                          }
                        ],
                        "src": "852:126:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1073:28:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1090:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1093:1:14",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1083:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1083:12:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1083:12:14"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "984:117:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1196:28:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1213:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1216:1:14",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1206:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1206:12:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1206:12:14"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1107:117:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1273:79:14",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1330:16:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1339:1:14",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1342:1:14",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1332:6:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1332:12:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1332:12:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1296:5:14"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1321:5:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "1303:17:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1303:24:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1293:2:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1293:35:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1286:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1286:43:14"
                              },
                              "nodeType": "YulIf",
                              "src": "1283:63:14"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1266:5:14",
                            "type": ""
                          }
                        ],
                        "src": "1230:122:14"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 14,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60c060405234801561001057600080fd5b50604051610ec5380380610ec583398181016040528101906100329190610137565b7fcdd7ba10b36b7349d5c9710e5e447ec8acaa8e3cbba8d20f4393eccf61f185b182828033600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505082608081815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050505050506101c5565b600081519050610131816101ae565b92915050565b6000806040838503121561014e5761014d6101a9565b5b600061015c85828601610122565b925050602061016d85828601610122565b9150509250929050565b600061018282610189565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101b781610177565b81146101c257600080fd5b50565b60805160a05160601c610cd86101ed60003960006106b50152600061050e0152610cd86000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633c9747f31161005b5780633c9747f3146101155780637eba557314610133578063eaddd0fd14610163578063ef88bf131461018157610088565b80631c39c38d1461008d57806322f8e566146100ab5780632434c5bd146100c757806329cb924d146100f7575b600080fd5b61009561019d565b6040516100a29190610a5f565b60405180910390f35b6100c560048036038101906100c09190610943565b6101c3565b005b6100e160048036038101906100dc9190610943565b6102af565b6040516100ee9190610af0565b60405180910390f35b6100ff610407565b60405161010c9190610af0565b60405180910390f35b61011d61050c565b60405161012a9190610a7a565b60405180910390f35b61014d6004803603810190610148919061099d565b610530565b60405161015a9190610af0565b60405180910390f35b61016b6106b3565b6040516101789190610a95565b60405180910390f35b61019b60048036038101906101969190610903565b6106d7565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561021f57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322f8e566826040518263ffffffff1660e01b815260040161027a9190610af0565b600060405180830381600087803b15801561029457600080fd5b505af11580156102a8573d6000803e3d6000fd5b5050505050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103529190610970565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f29190610970565b6103fc9190610b1c565b905080915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461050557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104c657600080fd5b505afa1580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe9190610970565b9050610509565b4290505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161058e9190610a5f565b60206040518083038186803b1580156105a657600080fd5b505afa1580156105ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105de9190610970565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016106399190610a5f565b60206040518083038186803b15801561065157600080fd5b505afa158015610665573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106899190610970565b6106939190610b1c565b905060008114156106a85760009150506106ad565b809150505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060019054906101000a900460ff16806106fd575060008054906101000a900460ff16155b61073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073390610ad0565b60405180910390fd5b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c390610ab0565b60405180910390fd5b60008060019054906101000a900460ff16159050801561081c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156108bf5760008060016101000a81548160ff0219169083151502179055505b505050565b6000813590506108d381610c74565b92915050565b6000813590506108e881610c8b565b92915050565b6000815190506108fd81610c8b565b92915050565b6000806040838503121561091a57610919610c1d565b5b6000610928858286016108c4565b9250506020610939858286016108c4565b9150509250929050565b60006020828403121561095957610958610c1d565b5b6000610967848285016108d9565b91505092915050565b60006020828403121561098657610985610c1d565b5b6000610994848285016108ee565b91505092915050565b600080604083850312156109b4576109b3610c1d565b5b60006109c2858286016108d9565b92505060206109d3858286016108c4565b9150509250929050565b6109e681610b72565b82525050565b6109f581610b84565b82525050565b610a0481610bb8565b82525050565b6000610a17601c83610b0b565b9150610a2282610c22565b602082019050919050565b6000610a3a601d83610b0b565b9150610a4582610c4b565b602082019050919050565b610a5981610bae565b82525050565b6000602082019050610a7460008301846109dd565b92915050565b6000602082019050610a8f60008301846109ec565b92915050565b6000602082019050610aaa60008301846109fb565b92915050565b60006020820190508181036000830152610ac981610a0a565b9050919050565b60006020820190508181036000830152610ae981610a2d565b9050919050565b6000602082019050610b056000830184610a50565b92915050565b600082825260208201905092915050565b6000610b2782610bae565b9150610b3283610bae565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b6757610b66610bee565b5b828201905092915050565b6000610b7d82610b8e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610bc382610bca565b9050919050565b6000610bd582610bdc565b9050919050565b6000610be782610b8e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f496e69743a204f6e6c79206465706c6f7965722063616e20696e697400000000600082015250565b7f496e69743a20436f6e747261637420697320696e697469616c697a6564000000600082015250565b610c7d81610b72565b8114610c8857600080fd5b50565b610c9481610bae565b8114610c9f57600080fd5b5056fea26469706673582212207437d23199a6932fe88e0a548797048430dd015aaa5ba934ac23edd075ab74ca64736f6c63430008070033",
              "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEC5 CODESIZE SUB DUP1 PUSH2 0xEC5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x137 JUMP JUMPDEST PUSH32 0xCDD7BA10B36B7349D5C9710E5E447EC8ACAA8E3CBBA8D20F4393ECCF61F185B1 DUP3 DUP3 DUP1 CALLER PUSH1 0x0 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP3 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP POP POP PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x131 DUP2 PUSH2 0x1AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E JUMPI PUSH2 0x14D PUSH2 0x1A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15C DUP6 DUP3 DUP7 ADD PUSH2 0x122 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16D DUP6 DUP3 DUP7 ADD PUSH2 0x122 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182 DUP3 PUSH2 0x189 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B7 DUP2 PUSH2 0x177 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0xCD8 PUSH2 0x1ED PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x6B5 ADD MSTORE PUSH1 0x0 PUSH2 0x50E ADD MSTORE PUSH2 0xCD8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3C9747F3 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x3C9747F3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x7EBA5573 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xEADDD0FD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xEF88BF13 EQ PUSH2 0x181 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1C39C38D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x22F8E566 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2434C5BD EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x22F8E566 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x505 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29CB924D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x970 JUMP JUMPDEST SWAP1 POP PUSH2 0x509 JUMP JUMPDEST TIMESTAMP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP2 SWAP1 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH2 0x693 SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6AD JUMP JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x6FD JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x733 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x81C JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x8BF JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8D3 DUP2 PUSH2 0xC74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E8 DUP2 PUSH2 0xC8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8FD DUP2 PUSH2 0xC8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91A JUMPI PUSH2 0x919 PUSH2 0xC1D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x928 DUP6 DUP3 DUP7 ADD PUSH2 0x8C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x939 DUP6 DUP3 DUP7 ADD PUSH2 0x8C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x959 JUMPI PUSH2 0x958 PUSH2 0xC1D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x967 DUP5 DUP3 DUP6 ADD PUSH2 0x8D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x986 JUMPI PUSH2 0x985 PUSH2 0xC1D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x994 DUP5 DUP3 DUP6 ADD PUSH2 0x8EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x9B3 PUSH2 0xC1D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C2 DUP6 DUP3 DUP7 ADD PUSH2 0x8D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9D3 DUP6 DUP3 DUP7 ADD PUSH2 0x8C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E6 DUP2 PUSH2 0xB72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9F5 DUP2 PUSH2 0xB84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA04 DUP2 PUSH2 0xBB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA17 PUSH1 0x1C DUP4 PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP PUSH2 0xA22 DUP3 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3A PUSH1 0x1D DUP4 PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP PUSH2 0xA45 DUP3 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA59 DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC9 DUP2 PUSH2 0xA0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE9 DUP2 PUSH2 0xA2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB27 DUP3 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0xB32 DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB66 PUSH2 0xBEE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D DUP3 PUSH2 0xB8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC3 DUP3 PUSH2 0xBCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD5 DUP3 PUSH2 0xBDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP3 PUSH2 0xB8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E69743A204F6E6C79206465706C6F7965722063616E20696E697400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E69743A20436F6E747261637420697320696E697469616C697A6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xC7D DUP2 PUSH2 0xB72 JUMP JUMPDEST DUP2 EQ PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC94 DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP2 EQ PUSH2 0xC9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x37D23199A6932FE88E0A548797048430DD015AAA5B 0xA9 CALLVALUE 0xAC 0x23 0xED 0xD0 PUSH22 0xAB74CA64736F6C634300080700330000000000000000 ",
              "sourceMap": "167:2308:2:-:0;;;635:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;420:24:1;718:5:2;725:6;719::0;2097:10:10;2085:9;;:22;;;;;;;;;;;;;;;;;;732:13:11;717:12;;:28;;;;;;;;;;;;;;;;;;672:80;750:4:0::1;737:17;;;;::::0;::::1;778:5;764:20;;;;;;;;;;::::0;::::1;653:138:::0;;;635:104:2;;167:2308;;7:143:14;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;167:2308:2:-;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@IDENTIFIER_17": {
                  "entryPoint": 1292,
                  "id": 17,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@core__20": {
                  "entryPoint": 1715,
                  "id": 20,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getCurrentTime_593": {
                  "entryPoint": 1031,
                  "id": 593,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getTotalWeight_196": {
                  "entryPoint": 687,
                  "id": 196,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getVoteWeight_175": {
                  "entryPoint": 1328,
                  "id": 175,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@initialise_141": {
                  "entryPoint": 1751,
                  "id": 141,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setCurrentTime_568": {
                  "entryPoint": 451,
                  "id": 568,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@timerAddress_527": {
                  "entryPoint": 413,
                  "id": 527,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_t_address": {
                  "entryPoint": 2244,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 2265,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 2286,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 2307,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 2371,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 2416,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_address": {
                  "entryPoint": 2461,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 2525,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_bytes32_to_t_bytes32_fromStack": {
                  "entryPoint": 2540,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_contract$_ICore_$268_to_t_address_fromStack": {
                  "entryPoint": 2555,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_stringliteral_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 2570,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 2605,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 2640,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 2655,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": 2682,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_ICore_$268__to_t_address__fromStack_reversed": {
                  "entryPoint": 2709,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 2736,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 2768,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": 2800,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 2827,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 2844,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 2930,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bytes32": {
                  "entryPoint": 2948,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 2958,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 2990,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_contract$_ICore_$268_to_t_address": {
                  "entryPoint": 3000,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint160_to_t_address": {
                  "entryPoint": 3018,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint160_to_t_uint160": {
                  "entryPoint": 3036,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3054,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 3101,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "store_literal_in_memory_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0": {
                  "entryPoint": 3106,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f": {
                  "entryPoint": 3147,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 3188,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 3211,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:7582:14",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:14"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:14"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:14",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:14",
                            "type": ""
                          }
                        ],
                        "src": "7:139:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "204:87:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "214:29:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "236:6:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "223:12:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "223:20:14"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "214:5:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "279:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "252:26:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "252:33:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "252:33:14"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "182:6:14",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "190:3:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "198:5:14",
                            "type": ""
                          }
                        ],
                        "src": "152:139:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "360:80:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "370:22:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "385:6:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:5:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "379:13:14"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "370:5:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "428:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "401:26:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "401:33:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "401:33:14"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "338:6:14",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "346:3:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "354:5:14",
                            "type": ""
                          }
                        ],
                        "src": "297:143:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "529:391:14",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "575:83:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "577:77:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "577:79:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "577:79:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "550:7:14"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "559:9:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "546:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "546:23:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "571:2:14",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "542:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "542:32:14"
                              },
                              "nodeType": "YulIf",
                              "src": "539:119:14"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "668:117:14",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "683:15:14",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "697:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "687:6:14",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "712:63:14",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "747:9:14"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "758:6:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "743:3:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "743:22:14"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "767:7:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "722:20:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "722:53:14"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "712:6:14"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "795:118:14",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "810:16:14",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "824:2:14",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "814:6:14",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "840:63:14",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "875:9:14"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "886:6:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "871:3:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "871:22:14"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "895:7:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "850:20:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "850:53:14"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "840:6:14"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "491:9:14",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "502:7:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "514:6:14",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "522:6:14",
                            "type": ""
                          }
                        ],
                        "src": "446:474:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "992:263:14",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1038:83:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1040:77:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1040:79:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1040:79:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1013:7:14"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1022:9:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1009:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1009:23:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1034:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1005:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1005:32:14"
                              },
                              "nodeType": "YulIf",
                              "src": "1002:119:14"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1131:117:14",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1146:15:14",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1160:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1150:6:14",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1175:63:14",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1210:9:14"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1221:6:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1206:3:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1206:22:14"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1230:7:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1185:20:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1185:53:14"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1175:6:14"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "962:9:14",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "973:7:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "985:6:14",
                            "type": ""
                          }
                        ],
                        "src": "926:329:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1338:274:14",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1384:83:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1386:77:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1386:79:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1386:79:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1359:7:14"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1368:9:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1355:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1355:23:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1380:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1351:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1351:32:14"
                              },
                              "nodeType": "YulIf",
                              "src": "1348:119:14"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1477:128:14",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1492:15:14",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1506:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1496:6:14",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1521:74:14",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1567:9:14"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1578:6:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1563:3:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1563:22:14"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1587:7:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1531:31:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1531:64:14"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1521:6:14"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1308:9:14",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1319:7:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1331:6:14",
                            "type": ""
                          }
                        ],
                        "src": "1261:351:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1701:391:14",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1747:83:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1749:77:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1749:79:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1749:79:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1722:7:14"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1731:9:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1718:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1718:23:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1743:2:14",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1714:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1714:32:14"
                              },
                              "nodeType": "YulIf",
                              "src": "1711:119:14"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1840:117:14",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1855:15:14",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1869:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1859:6:14",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1884:63:14",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1919:9:14"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1930:6:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1915:3:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1915:22:14"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1939:7:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1894:20:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1894:53:14"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1884:6:14"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1967:118:14",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1982:16:14",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1996:2:14",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1986:6:14",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2012:63:14",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2047:9:14"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2058:6:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2043:3:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2043:22:14"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2067:7:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2022:20:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2022:53:14"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2012:6:14"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1663:9:14",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1674:7:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1686:6:14",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1694:6:14",
                            "type": ""
                          }
                        ],
                        "src": "1618:474:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2163:53:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2180:3:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2203:5:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2185:17:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2185:24:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2173:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2173:37:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2173:37:14"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2151:5:14",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2158:3:14",
                            "type": ""
                          }
                        ],
                        "src": "2098:118:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2287:53:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2304:3:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2327:5:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "2309:17:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2309:24:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2297:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2297:37:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2297:37:14"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2275:5:14",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2282:3:14",
                            "type": ""
                          }
                        ],
                        "src": "2222:118:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2424:79:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2441:3:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2490:5:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ICore_$268_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2446:43:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2446:50:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2434:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2434:63:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2434:63:14"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ICore_$268_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2412:5:14",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2419:3:14",
                            "type": ""
                          }
                        ],
                        "src": "2346:157:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2655:220:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2665:74:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2731:3:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2736:2:14",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2672:58:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2672:67:14"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2665:3:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2837:3:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2748:88:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2748:93:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2748:93:14"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2850:19:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2861:3:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2866:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2857:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2857:12:14"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2850:3:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2643:3:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2651:3:14",
                            "type": ""
                          }
                        ],
                        "src": "2509:366:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3027:220:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3037:74:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3103:3:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3108:2:14",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3044:58:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3044:67:14"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3037:3:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3209:3:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f",
                                  "nodeType": "YulIdentifier",
                                  "src": "3120:88:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3120:93:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3120:93:14"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3222:19:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3233:3:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3238:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3229:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3229:12:14"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3222:3:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3015:3:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3023:3:14",
                            "type": ""
                          }
                        ],
                        "src": "2881:366:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3318:53:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3335:3:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3358:5:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3340:17:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3340:24:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3328:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3328:37:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3328:37:14"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3306:5:14",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3313:3:14",
                            "type": ""
                          }
                        ],
                        "src": "3253:118:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3475:124:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3485:26:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3497:9:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3508:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3493:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3493:18:14"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3485:4:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3565:6:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3578:9:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3589:1:14",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3574:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3574:17:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3521:43:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3521:71:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3521:71:14"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3447:9:14",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3459:6:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3470:4:14",
                            "type": ""
                          }
                        ],
                        "src": "3377:222:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3703:124:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3713:26:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3725:9:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3736:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3721:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3721:18:14"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3713:4:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3793:6:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3806:9:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3817:1:14",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3802:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3802:17:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3749:43:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3749:71:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3749:71:14"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3675:9:14",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3687:6:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3698:4:14",
                            "type": ""
                          }
                        ],
                        "src": "3605:222:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3944:137:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3954:26:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3966:9:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3977:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3962:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3962:18:14"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3954:4:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4047:6:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4060:9:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4071:1:14",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4056:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4056:17:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ICore_$268_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3990:56:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3990:84:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3990:84:14"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ICore_$268__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3916:9:14",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3928:6:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3939:4:14",
                            "type": ""
                          }
                        ],
                        "src": "3833:248:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4258:248:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4268:26:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4280:9:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4291:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4276:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4276:18:14"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4268:4:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4315:9:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4326:1:14",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4311:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4311:17:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "4334:4:14"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4340:9:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4330:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4330:20:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4304:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4304:47:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4304:47:14"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4360:139:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "4494:4:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4368:124:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4368:131:14"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4360:4:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4238:9:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4253:4:14",
                            "type": ""
                          }
                        ],
                        "src": "4087:419:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4683:248:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4693:26:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4705:9:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4716:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4701:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4701:18:14"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4693:4:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4740:9:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4751:1:14",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4736:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4736:17:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "4759:4:14"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4765:9:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4755:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4755:20:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4729:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4729:47:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4729:47:14"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4785:139:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "4919:4:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4793:124:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4793:131:14"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4785:4:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4663:9:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4678:4:14",
                            "type": ""
                          }
                        ],
                        "src": "4512:419:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5035:124:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5045:26:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5057:9:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5068:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5053:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5053:18:14"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5045:4:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5125:6:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5138:9:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5149:1:14",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5134:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5134:17:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5081:43:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5081:71:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5081:71:14"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5007:9:14",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5019:6:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5030:4:14",
                            "type": ""
                          }
                        ],
                        "src": "4937:222:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5205:35:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5215:19:14",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5231:2:14",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5225:5:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5225:9:14"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5215:6:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "5198:6:14",
                            "type": ""
                          }
                        ],
                        "src": "5165:75:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5342:73:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5359:3:14"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5364:6:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5352:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5352:19:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5352:19:14"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5380:29:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5399:3:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5404:4:14",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5395:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5395:14:14"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5380:11:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5314:3:14",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5319:6:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "5330:11:14",
                            "type": ""
                          }
                        ],
                        "src": "5246:169:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5465:261:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5475:25:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5498:1:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "5480:17:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5480:20:14"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "5475:1:14"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5509:25:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "5532:1:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "5514:17:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5514:20:14"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "5509:1:14"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5672:22:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5674:16:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5674:18:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5674:18:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5593:1:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5600:66:14",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "5668:1:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5596:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5596:74:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5590:2:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5590:81:14"
                              },
                              "nodeType": "YulIf",
                              "src": "5587:107:14"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5704:16:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5715:1:14"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "5718:1:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5711:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5711:9:14"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "5704:3:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "5452:1:14",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "5455:1:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "5461:3:14",
                            "type": ""
                          }
                        ],
                        "src": "5421:305:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5777:51:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5787:35:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5816:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "5798:17:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5798:24:14"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5787:7:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5759:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5769:7:14",
                            "type": ""
                          }
                        ],
                        "src": "5732:96:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5879:32:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5889:16:14",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5900:5:14"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5889:7:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5861:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5871:7:14",
                            "type": ""
                          }
                        ],
                        "src": "5834:77:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5962:81:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5972:65:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5987:5:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5994:42:14",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5983:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5983:54:14"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5972:7:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5944:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5954:7:14",
                            "type": ""
                          }
                        ],
                        "src": "5917:126:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6094:32:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6104:16:14",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6115:5:14"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6104:7:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6076:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6086:7:14",
                            "type": ""
                          }
                        ],
                        "src": "6049:77:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6205:66:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6215:50:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6259:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "6228:30:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6228:37:14"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6215:9:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ICore_$268_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6185:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6195:9:14",
                            "type": ""
                          }
                        ],
                        "src": "6132:139:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6337:66:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6347:50:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6391:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6360:30:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6360:37:14"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6347:9:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6317:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6327:9:14",
                            "type": ""
                          }
                        ],
                        "src": "6277:126:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6469:53:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6479:37:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6510:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6492:17:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6492:24:14"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6479:9:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6449:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6459:9:14",
                            "type": ""
                          }
                        ],
                        "src": "6409:113:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6556:152:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6573:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6576:77:14",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6566:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6566:88:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6566:88:14"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6670:1:14",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6673:4:14",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6663:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6663:15:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6663:15:14"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6694:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6697:4:14",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6687:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6687:15:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6687:15:14"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6528:180:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6803:28:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6820:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6823:1:14",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6813:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6813:12:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6813:12:14"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6714:117:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6926:28:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6943:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6946:1:14",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6936:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6936:12:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6936:12:14"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6837:117:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7066:72:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7088:6:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7096:1:14",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7084:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7084:14:14"
                                  },
                                  {
                                    "hexValue": "496e69743a204f6e6c79206465706c6f7965722063616e20696e6974",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7100:30:14",
                                    "type": "",
                                    "value": "Init: Only deployer can init"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7077:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7077:54:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7077:54:14"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "7058:6:14",
                            "type": ""
                          }
                        ],
                        "src": "6960:178:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7250:73:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7272:6:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7280:1:14",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7268:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7268:14:14"
                                  },
                                  {
                                    "hexValue": "496e69743a20436f6e747261637420697320696e697469616c697a6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7284:31:14",
                                    "type": "",
                                    "value": "Init: Contract is initialized"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7261:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7261:55:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7261:55:14"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "7242:6:14",
                            "type": ""
                          }
                        ],
                        "src": "7144:179:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7372:79:14",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7429:16:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7438:1:14",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7441:1:14",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7431:6:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7431:12:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7431:12:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7395:5:14"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7420:5:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "7402:17:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7402:24:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "7392:2:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7392:35:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7385:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7385:43:14"
                              },
                              "nodeType": "YulIf",
                              "src": "7382:63:14"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7365:5:14",
                            "type": ""
                          }
                        ],
                        "src": "7329:122:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7500:79:14",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7557:16:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7566:1:14",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7569:1:14",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7559:6:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7559:12:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7559:12:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7523:5:14"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7548:5:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "7530:17:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7530:24:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "7520:2:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7520:35:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7513:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7513:43:14"
                              },
                              "nodeType": "YulIf",
                              "src": "7510:63:14"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7493:5:14",
                            "type": ""
                          }
                        ],
                        "src": "7457:122:14"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_contract$_ICore_$268_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICore_$268_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ICore_$268__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICore_$268_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ICore_$268_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Init: Only deployer can init\")\n\n    }\n\n    function store_literal_in_memory_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Init: Contract is initialized\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 14,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "17": [
                  {
                    "length": 32,
                    "start": 1294
                  }
                ],
                "20": [
                  {
                    "length": 32,
                    "start": 1717
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80633c9747f31161005b5780633c9747f3146101155780637eba557314610133578063eaddd0fd14610163578063ef88bf131461018157610088565b80631c39c38d1461008d57806322f8e566146100ab5780632434c5bd146100c757806329cb924d146100f7575b600080fd5b61009561019d565b6040516100a29190610a5f565b60405180910390f35b6100c560048036038101906100c09190610943565b6101c3565b005b6100e160048036038101906100dc9190610943565b6102af565b6040516100ee9190610af0565b60405180910390f35b6100ff610407565b60405161010c9190610af0565b60405180910390f35b61011d61050c565b60405161012a9190610a7a565b60405180910390f35b61014d6004803603810190610148919061099d565b610530565b60405161015a9190610af0565b60405180910390f35b61016b6106b3565b6040516101789190610a95565b60405180910390f35b61019b60048036038101906101969190610903565b6106d7565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561021f57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322f8e566826040518263ffffffff1660e01b815260040161027a9190610af0565b600060405180830381600087803b15801561029457600080fd5b505af11580156102a8573d6000803e3d6000fd5b5050505050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103529190610970565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f29190610970565b6103fc9190610b1c565b905080915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461050557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104c657600080fd5b505afa1580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe9190610970565b9050610509565b4290505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161058e9190610a5f565b60206040518083038186803b1580156105a657600080fd5b505afa1580156105ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105de9190610970565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016106399190610a5f565b60206040518083038186803b15801561065157600080fd5b505afa158015610665573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106899190610970565b6106939190610b1c565b905060008114156106a85760009150506106ad565b809150505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060019054906101000a900460ff16806106fd575060008054906101000a900460ff16155b61073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073390610ad0565b60405180910390fd5b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c390610ab0565b60405180910390fd5b60008060019054906101000a900460ff16159050801561081c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156108bf5760008060016101000a81548160ff0219169083151502179055505b505050565b6000813590506108d381610c74565b92915050565b6000813590506108e881610c8b565b92915050565b6000815190506108fd81610c8b565b92915050565b6000806040838503121561091a57610919610c1d565b5b6000610928858286016108c4565b9250506020610939858286016108c4565b9150509250929050565b60006020828403121561095957610958610c1d565b5b6000610967848285016108d9565b91505092915050565b60006020828403121561098657610985610c1d565b5b6000610994848285016108ee565b91505092915050565b600080604083850312156109b4576109b3610c1d565b5b60006109c2858286016108d9565b92505060206109d3858286016108c4565b9150509250929050565b6109e681610b72565b82525050565b6109f581610b84565b82525050565b610a0481610bb8565b82525050565b6000610a17601c83610b0b565b9150610a2282610c22565b602082019050919050565b6000610a3a601d83610b0b565b9150610a4582610c4b565b602082019050919050565b610a5981610bae565b82525050565b6000602082019050610a7460008301846109dd565b92915050565b6000602082019050610a8f60008301846109ec565b92915050565b6000602082019050610aaa60008301846109fb565b92915050565b60006020820190508181036000830152610ac981610a0a565b9050919050565b60006020820190508181036000830152610ae981610a2d565b9050919050565b6000602082019050610b056000830184610a50565b92915050565b600082825260208201905092915050565b6000610b2782610bae565b9150610b3283610bae565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b6757610b66610bee565b5b828201905092915050565b6000610b7d82610b8e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610bc382610bca565b9050919050565b6000610bd582610bdc565b9050919050565b6000610be782610b8e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f496e69743a204f6e6c79206465706c6f7965722063616e20696e697400000000600082015250565b7f496e69743a20436f6e747261637420697320696e697469616c697a6564000000600082015250565b610c7d81610b72565b8114610c8857600080fd5b50565b610c9481610bae565b8114610c9f57600080fd5b5056fea26469706673582212207437d23199a6932fe88e0a548797048430dd015aaa5ba934ac23edd075ab74ca64736f6c63430008070033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3C9747F3 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x3C9747F3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x7EBA5573 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xEADDD0FD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xEF88BF13 EQ PUSH2 0x181 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1C39C38D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x22F8E566 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2434C5BD EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x22F8E566 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x505 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29CB924D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x970 JUMP JUMPDEST SWAP1 POP PUSH2 0x509 JUMP JUMPDEST TIMESTAMP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP2 SWAP1 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH2 0x693 SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6AD JUMP JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x6FD JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x733 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x81C JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x8BF JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8D3 DUP2 PUSH2 0xC74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E8 DUP2 PUSH2 0xC8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8FD DUP2 PUSH2 0xC8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91A JUMPI PUSH2 0x919 PUSH2 0xC1D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x928 DUP6 DUP3 DUP7 ADD PUSH2 0x8C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x939 DUP6 DUP3 DUP7 ADD PUSH2 0x8C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x959 JUMPI PUSH2 0x958 PUSH2 0xC1D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x967 DUP5 DUP3 DUP6 ADD PUSH2 0x8D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x986 JUMPI PUSH2 0x985 PUSH2 0xC1D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x994 DUP5 DUP3 DUP6 ADD PUSH2 0x8EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x9B3 PUSH2 0xC1D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C2 DUP6 DUP3 DUP7 ADD PUSH2 0x8D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9D3 DUP6 DUP3 DUP7 ADD PUSH2 0x8C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E6 DUP2 PUSH2 0xB72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9F5 DUP2 PUSH2 0xB84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA04 DUP2 PUSH2 0xBB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA17 PUSH1 0x1C DUP4 PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP PUSH2 0xA22 DUP3 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3A PUSH1 0x1D DUP4 PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP PUSH2 0xA45 DUP3 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA59 DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC9 DUP2 PUSH2 0xA0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE9 DUP2 PUSH2 0xA2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB27 DUP3 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0xB32 DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB66 PUSH2 0xBEE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D DUP3 PUSH2 0xB8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC3 DUP3 PUSH2 0xBCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD5 DUP3 PUSH2 0xBDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP3 PUSH2 0xB8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E69743A204F6E6C79206465706C6F7965722063616E20696E697400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E69743A20436F6E747261637420697320696E697469616C697A6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xC7D DUP2 PUSH2 0xB72 JUMP JUMPDEST DUP2 EQ PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC94 DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP2 EQ PUSH2 0xC9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x37D23199A6932FE88E0A548797048430DD015AAA5B 0xA9 CALLVALUE 0xAC 0x23 0xED 0xD0 PUSH22 0xAB74CA64736F6C634300080700330000000000000000 ",
              "sourceMap": "167:2308:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;380:27:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1086:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2207:266:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1446:268:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;455:35:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1600:601:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;497:28:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;745:303:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;380:27:11;;;;;;;;;;;;;:::o;1086:115::-;888:3;864:28;;:12;;;;;;;;;;;:28;;;;856:37;;;;;;1160:12:::1;;;;;;;;;;;1154:34;;;1189:4;1154:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1086:115:::0;:::o;2207:266:2:-;2280:7;2379:13;2421:9;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2395:9;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;;:::i;:::-;2379:65;;2461:5;2454:12;;;2207:266;;;:::o;1446:268:11:-;1493:7;1540:3;1516:28;;:12;;;;;;;;;;;:28;;;1512:196;;1573:12;;;;;;;;;;;1567:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1560:43;;;;1512:196;1641:15;1634:22;;1446:268;;:::o;455:35:0:-;;;:::o;1600:601:2:-;1720:7;1935:18;1998:9;;;;;;;;;;;:19;;;2018:6;1998:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1956:9;;;;;;;;;;;:19;;;1976:6;1956:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;;;:::i;:::-;1935:90;;2111:1;2097:10;:15;2093:102;;;2135:1;2128:8;;;;;2093:102;2174:10;2167:17;;;1600:601;;;;;:::o;497:28:0:-;;;:::o;745:303:2:-;2345:13:10;;;;;;;;;;;:30;;;;2363:12;;;;;;;;;;2362:13;2345:30;2324:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;2462:9;;;;;;;;;;;2448:23;;:10;:23;;;2440:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2515:19;2538:13;;;;;;;;;;;2537:14;2515:36;;2566:14;2562:98;;;2612:4;2596:13;;:20;;;;;;;;;;;;;;;;;;2645:4;2630:12;;:19;;;;;;;;;;;;;;;;;;2562:98;873:9:2::1;854;;:29;;;;;;;;;;;;;;;;;;912:9;893;;:29;;;;;;;;;;;;;;;;;;2686:14:10::0;2682:66;;;2732:5;2716:13;;:21;;;;;;;;;;;;;;;;;;2682:66;2314:440;745:303:2;;:::o;7:139:14:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:143::-;354:5;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;297:143;;;;:::o;446:474::-;514:6;522;571:2;559:9;550:7;546:23;542:32;539:119;;;577:79;;:::i;:::-;539:119;697:1;722:53;767:7;758:6;747:9;743:22;722:53;:::i;:::-;712:63;;668:117;824:2;850:53;895:7;886:6;875:9;871:22;850:53;:::i;:::-;840:63;;795:118;446:474;;;;;:::o;926:329::-;985:6;1034:2;1022:9;1013:7;1009:23;1005:32;1002:119;;;1040:79;;:::i;:::-;1002:119;1160:1;1185:53;1230:7;1221:6;1210:9;1206:22;1185:53;:::i;:::-;1175:63;;1131:117;926:329;;;;:::o;1261:351::-;1331:6;1380:2;1368:9;1359:7;1355:23;1351:32;1348:119;;;1386:79;;:::i;:::-;1348:119;1506:1;1531:64;1587:7;1578:6;1567:9;1563:22;1531:64;:::i;:::-;1521:74;;1477:128;1261:351;;;;:::o;1618:474::-;1686:6;1694;1743:2;1731:9;1722:7;1718:23;1714:32;1711:119;;;1749:79;;:::i;:::-;1711:119;1869:1;1894:53;1939:7;1930:6;1919:9;1915:22;1894:53;:::i;:::-;1884:63;;1840:117;1996:2;2022:53;2067:7;2058:6;2047:9;2043:22;2022:53;:::i;:::-;2012:63;;1967:118;1618:474;;;;;:::o;2098:118::-;2185:24;2203:5;2185:24;:::i;:::-;2180:3;2173:37;2098:118;;:::o;2222:::-;2309:24;2327:5;2309:24;:::i;:::-;2304:3;2297:37;2222:118;;:::o;2346:157::-;2446:50;2490:5;2446:50;:::i;:::-;2441:3;2434:63;2346:157;;:::o;2509:366::-;2651:3;2672:67;2736:2;2731:3;2672:67;:::i;:::-;2665:74;;2748:93;2837:3;2748:93;:::i;:::-;2866:2;2861:3;2857:12;2850:19;;2509:366;;;:::o;2881:::-;3023:3;3044:67;3108:2;3103:3;3044:67;:::i;:::-;3037:74;;3120:93;3209:3;3120:93;:::i;:::-;3238:2;3233:3;3229:12;3222:19;;2881:366;;;:::o;3253:118::-;3340:24;3358:5;3340:24;:::i;:::-;3335:3;3328:37;3253:118;;:::o;3377:222::-;3470:4;3508:2;3497:9;3493:18;3485:26;;3521:71;3589:1;3578:9;3574:17;3565:6;3521:71;:::i;:::-;3377:222;;;;:::o;3605:::-;3698:4;3736:2;3725:9;3721:18;3713:26;;3749:71;3817:1;3806:9;3802:17;3793:6;3749:71;:::i;:::-;3605:222;;;;:::o;3833:248::-;3939:4;3977:2;3966:9;3962:18;3954:26;;3990:84;4071:1;4060:9;4056:17;4047:6;3990:84;:::i;:::-;3833:248;;;;:::o;4087:419::-;4253:4;4291:2;4280:9;4276:18;4268:26;;4340:9;4334:4;4330:20;4326:1;4315:9;4311:17;4304:47;4368:131;4494:4;4368:131;:::i;:::-;4360:139;;4087:419;;;:::o;4512:::-;4678:4;4716:2;4705:9;4701:18;4693:26;;4765:9;4759:4;4755:20;4751:1;4740:9;4736:17;4729:47;4793:131;4919:4;4793:131;:::i;:::-;4785:139;;4512:419;;;:::o;4937:222::-;5030:4;5068:2;5057:9;5053:18;5045:26;;5081:71;5149:1;5138:9;5134:17;5125:6;5081:71;:::i;:::-;4937:222;;;;:::o;5246:169::-;5330:11;5364:6;5359:3;5352:19;5404:4;5399:3;5395:14;5380:29;;5246:169;;;;:::o;5421:305::-;5461:3;5480:20;5498:1;5480:20;:::i;:::-;5475:25;;5514:20;5532:1;5514:20;:::i;:::-;5509:25;;5668:1;5600:66;5596:74;5593:1;5590:81;5587:107;;;5674:18;;:::i;:::-;5587:107;5718:1;5715;5711:9;5704:16;;5421:305;;;;:::o;5732:96::-;5769:7;5798:24;5816:5;5798:24;:::i;:::-;5787:35;;5732:96;;;:::o;5834:77::-;5871:7;5900:5;5889:16;;5834:77;;;:::o;5917:126::-;5954:7;5994:42;5987:5;5983:54;5972:65;;5917:126;;;:::o;6049:77::-;6086:7;6115:5;6104:16;;6049:77;;;:::o;6132:139::-;6195:9;6228:37;6259:5;6228:37;:::i;:::-;6215:50;;6132:139;;;:::o;6277:126::-;6327:9;6360:37;6391:5;6360:37;:::i;:::-;6347:50;;6277:126;;;:::o;6409:113::-;6459:9;6492:24;6510:5;6492:24;:::i;:::-;6479:37;;6409:113;;;:::o;6528:180::-;6576:77;6573:1;6566:88;6673:4;6670:1;6663:15;6697:4;6694:1;6687:15;6837:117;6946:1;6943;6936:12;6960:178;7100:30;7096:1;7088:6;7084:14;7077:54;6960:178;:::o;7144:179::-;7284:31;7280:1;7272:6;7268:14;7261:55;7144:179;:::o;7329:122::-;7402:24;7420:5;7402:24;:::i;:::-;7395:5;7392:35;7382:63;;7441:1;7438;7431:12;7382:63;7329:122;:::o;7457:::-;7530:24;7548:5;7530:24;:::i;:::-;7523:5;7520:35;7510:63;;7569:1;7566;7559:12;7510:63;7457:122;:::o"
            },
            "methodIdentifiers": {
              "IDENTIFIER()": "3c9747f3",
              "core_()": "eaddd0fd",
              "getCurrentTime()": "29cb924d",
              "getTotalWeight(uint256)": "2434c5bd",
              "getVoteWeight(uint256,address)": "7eba5573",
              "initialise(address,address)": "ef88bf13",
              "setCurrentTime(uint256)": "22f8e566",
              "timerAddress()": "1c39c38d"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "getCurrentTime()": {
                "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
              },
              "getVoteWeight(uint256,address)": {
                "notice": "The vote weight of the _voter is a simple equation of their          governance and reputation token:          vote_weight = (gov_token * rep_token) / 2"
              },
              "setCurrentTime(uint256)": {
                "notice": "Sets the current time."
              }
            },
            "version": 1
          }
        }
      },
      "contracts/interfaces/IBooth.sol": {
        "IBooth": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "consensusReached",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "reached",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "votePassed",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "consensusReached(uint256)": "e343409a"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/interfaces/ICoord.sol": {
        "ICoord": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_subIdentifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "_subImplementation",
                  "type": "address"
                }
              ],
              "name": "addSubSystem",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_system",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "_subIdentifier",
                  "type": "bytes32"
                }
              ],
              "name": "getSubSystem",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_exeID",
                  "type": "bytes32"
                }
              ],
              "name": "isExecutable",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "isVotable",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_exeID",
                  "type": "bytes32"
                }
              ],
              "name": "setExecute",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "voting",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "isExecutable(bytes32)": {
                "details": "The reason we use Exe IDs here and not Prop IDs is that          executables may be valid for execution outside of a proposal          (e.g an approved recurring payment). If the exe is tied to a          proposal the coordinator will be able to look up and verify it's          executable status.",
                "params": {
                  "_exeID": "ID of the executable to check."
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addSubSystem(bytes32,address)": "38c68782",
              "getSubSystem(address,bytes32)": "701370dc",
              "isExecutable(bytes32)": "9cf782cb",
              "isVotable(uint256)": "299ba15f",
              "setExecute(bytes32)": "7526bd9b",
              "voting(uint256)": "fd4a77f1"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "isExecutable(bytes32)": {
                "notice": "This function will check that the specified proposal has reached          quorum, and that it has passed. If the proposal has not reached          quorum or has not passed this will return false."
              }
            },
            "version": 1
          }
        }
      },
      "contracts/interfaces/ICore.sol": {
        "ICore": {
          "abi": [
            {
              "inputs": [],
              "name": "IDENTIFIER",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getInstance",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "IDENTIFIER()": "3c9747f3",
              "getInstance(bytes32)": "624a23e0"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/interfaces/IExe.sol": {
        "IExe": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "_exeID",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "_description",
                  "type": "string"
                }
              ],
              "name": "createPropExe",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "propExeID",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_exeID",
                  "type": "bytes32"
                }
              ],
              "name": "getExe",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "callData",
                  "type": "bytes[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "getExe(bytes32)": {
                "params": {
                  "_exeID": "ID of the executable to get the data of."
                },
                "returns": {
                  "callData": "The array of calldata to execute at each address.",
                  "targets": "The array of target addresses.",
                  "values": "The array of values (in native tokens) to pass through          with each call. Note that these values are outside of any gas          requirements and costs."
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createPropExe(uint256,bytes32,string)": "295adadf",
              "getExe(bytes32)": "971aa75e"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/interfaces/IProp.sol": {
        "IProp": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_exeID",
                  "type": "bytes32"
                }
              ],
              "name": "getPropOfExe",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "getPropVotables",
              "outputs": [
                {
                  "internalType": "enum IProp.PropStatus",
                  "name": "state",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "voteStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "voteEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "executedOrCanceled",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "getVoteType",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "propDefeated",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "propExecuted",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "propExpire",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "propQueued",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "propVoting",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getPropOfExe(bytes32)": "9e34fa6a",
              "getPropVotables(uint256)": "a6640e4c",
              "getVoteType(uint256)": "0062104a",
              "propDefeated(uint256)": "f40507ac",
              "propExecuted(uint256)": "b7abd803",
              "propExpire(uint256)": "7ef966e4",
              "propQueued(uint256)": "cd39ebfd",
              "propVoting(uint256)": "77e4b811"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/interfaces/IWeight.sol": {
        "IWeight": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "getTotalWeight",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_voter",
                  "type": "address"
                }
              ],
              "name": "getVoteWeight",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getTotalWeight(uint256)": "2434c5bd",
              "getVoteWeight(uint256,address)": "7eba5573"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/openZeppelin/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 standard as defined in the EIP.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/openZeppelin/Initializable.sol": {
        "Initializable": {
          "abi": [],
          "devdoc": {
            "details": "This is a base contract to aid in writing upgradeable contracts, or           any kind of contract that will be deployed behind a proxy. Since a           proxied contract can't have a constructor, it's common to move           constructor logic to an external initializer function, usually           called `initialize`. It then becomes necessary to protect this           initializer function so it can only be called once. The           {initializer} modifier provided by this contract will have this           effect. TIP:     To avoid leaving the proxy in an uninitialized state, the           initializer function should be called as early as possible by           providing the encoded function call as the `_data` argument to           {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke           a parent initializer twice, or to ensure that all initializers are           idempotent. This is not verified automatically as constructors are           by Solidity.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/test/Testable.sol": {
        "Testable": {
          "abi": [
            {
              "inputs": [],
              "name": "getCurrentTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "setCurrentTime",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timerAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "constructor": {
                "params": {
                  "_timerAddress": "Contract that stores the current time in a testing environment. Must be set to 0x0 for production environments that use live time."
                }
              },
              "getCurrentTime()": {
                "returns": {
                  "_0": "uint for the current Testable timestamp."
                }
              },
              "setCurrentTime(uint256)": {
                "details": "Will revert if not running in test mode.",
                "params": {
                  "time": "timestamp to set current Testable time to."
                }
              }
            },
            "title": "Base class that provides time overrides, but only if being run in test mode.",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getCurrentTime()": "29cb924d",
              "setCurrentTime(uint256)": "22f8e566",
              "timerAddress()": "1c39c38d"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "constructor": {
                "notice": "Constructs the Testable contract. Called by child contracts."
              },
              "getCurrentTime()": {
                "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
              },
              "setCurrentTime(uint256)": {
                "notice": "Sets the current time."
              }
            },
            "version": 1
          }
        }
      },
      "contracts/test/Timer.sol": {
        "Timer": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "getCurrentTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "setCurrentTime",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "getCurrentTime()": {
                "returns": {
                  "_0": "uint256 for the current Testable timestamp."
                }
              },
              "setCurrentTime(uint256)": {
                "details": "Will revert if not running in test mode.",
                "params": {
                  "time": "timestamp to set `currentTime` to."
                }
              }
            },
            "title": "Universal store of current contract time for testing environments.",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_608": {
                  "entryPoint": null,
                  "id": 608,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5042600081905550610150806100276000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806322f8e5661461003b57806329cb924d14610057575b600080fd5b6100556004803603810190610050919061009d565b610075565b005b61005f61007f565b60405161006c91906100d9565b60405180910390f35b8060008190555050565b60008054905090565b60008135905061009781610103565b92915050565b6000602082840312156100b3576100b26100fe565b5b60006100c184828501610088565b91505092915050565b6100d3816100f4565b82525050565b60006020820190506100ee60008301846100ca565b92915050565b6000819050919050565b600080fd5b61010c816100f4565b811461011757600080fd5b5056fea2646970667358221220e60048c173ec18af02104053a832921dc20fcb0175020334840c53c38c036a1764736f6c63430008070033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP TIMESTAMP PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x150 DUP1 PUSH2 0x27 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22F8E566 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x9D JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x97 DUP2 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH2 0xB2 PUSH2 0xFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP5 DUP3 DUP6 ADD PUSH2 0x88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0xF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C DUP2 PUSH2 0xF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 STOP BASEFEE 0xC1 PUSH20 0xEC18AF02104053A832921DC20FCB017502033484 0xC MSTORE8 0xC3 DUP13 SUB PUSH11 0x1764736F6C634300080700 CALLER ",
              "sourceMap": "141:642:12:-:0;;;196:101;;;;;;;;;;234:15;220:11;:29;;;;141:642;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@getCurrentTime_628": {
                  "entryPoint": 127,
                  "id": 628,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@setCurrentTime_619": {
                  "entryPoint": 117,
                  "id": 619,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 136,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 157,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 202,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": 217,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 244,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 254,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 259,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1374:14",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:14"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:14"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:14",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:14",
                            "type": ""
                          }
                        ],
                        "src": "7:139:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "218:263:14",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "264:83:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "266:77:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "266:79:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "266:79:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "239:7:14"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "248:9:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:23:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "260:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:32:14"
                              },
                              "nodeType": "YulIf",
                              "src": "228:119:14"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "357:117:14",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "372:15:14",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "386:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "376:6:14",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "401:63:14",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "436:9:14"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "447:6:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "432:3:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "432:22:14"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "456:7:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "411:20:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "411:53:14"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "401:6:14"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "188:9:14",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "199:7:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "211:6:14",
                            "type": ""
                          }
                        ],
                        "src": "152:329:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "552:53:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "569:3:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "592:5:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "574:17:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "574:24:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "562:37:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "562:37:14"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "540:5:14",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "547:3:14",
                            "type": ""
                          }
                        ],
                        "src": "487:118:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "709:124:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "719:26:14",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "731:9:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "742:2:14",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "727:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "727:18:14"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "719:4:14"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "799:6:14"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "812:9:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "823:1:14",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "808:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "808:17:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "755:43:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "755:71:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "755:71:14"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "681:9:14",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "693:6:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "704:4:14",
                            "type": ""
                          }
                        ],
                        "src": "611:222:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "879:35:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "889:19:14",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "905:2:14",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "899:5:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "899:9:14"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "889:6:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "872:6:14",
                            "type": ""
                          }
                        ],
                        "src": "839:75:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "965:32:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "975:16:14",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "986:5:14"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "975:7:14"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "947:5:14",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "957:7:14",
                            "type": ""
                          }
                        ],
                        "src": "920:77:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1092:28:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1109:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1112:1:14",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1102:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1102:12:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1102:12:14"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1003:117:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1215:28:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1232:1:14",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1235:1:14",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1225:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1225:12:14"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1225:12:14"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1126:117:14"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1292:79:14",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1349:16:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1358:1:14",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1361:1:14",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1351:6:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1351:12:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1351:12:14"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1315:5:14"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1340:5:14"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "1322:17:14"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1322:24:14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1312:2:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1312:35:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1305:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1305:43:14"
                              },
                              "nodeType": "YulIf",
                              "src": "1302:63:14"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1285:5:14",
                            "type": ""
                          }
                        ],
                        "src": "1249:122:14"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 14,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806322f8e5661461003b57806329cb924d14610057575b600080fd5b6100556004803603810190610050919061009d565b610075565b005b61005f61007f565b60405161006c91906100d9565b60405180910390f35b8060008190555050565b60008054905090565b60008135905061009781610103565b92915050565b6000602082840312156100b3576100b26100fe565b5b60006100c184828501610088565b91505092915050565b6100d3816100f4565b82525050565b60006020820190506100ee60008301846100ca565b92915050565b6000819050919050565b600080fd5b61010c816100f4565b811461011757600080fd5b5056fea2646970667358221220e60048c173ec18af02104053a832921dc20fcb0175020334840c53c38c036a1764736f6c63430008070033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22F8E566 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x9D JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x97 DUP2 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH2 0xB2 PUSH2 0xFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP5 DUP3 DUP6 ADD PUSH2 0x88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD3 DUP2 PUSH2 0xF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C DUP2 PUSH2 0xF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 STOP BASEFEE 0xC1 PUSH20 0xEC18AF02104053A832921DC20FCB017502033484 0xC MSTORE8 0xC3 DUP13 SUB PUSH11 0x1764736F6C634300080700 CALLER ",
              "sourceMap": "141:642:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;464:82;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;690:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:82;535:4;521:11;:18;;;;464:82;:::o;690:91::-;737:7;763:11;;756:18;;690:91;:::o;7:139:14:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:77::-;957:7;986:5;975:16;;920:77;;;:::o;1126:117::-;1235:1;1232;1225:12;1249:122;1322:24;1340:5;1322:24;:::i;:::-;1315:5;1312:35;1302:63;;1361:1;1358;1351:12;1302:63;1249:122;:::o"
            },
            "methodIdentifiers": {
              "getCurrentTime()": "29cb924d",
              "setCurrentTime(uint256)": "22f8e566"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "getCurrentTime()": {
                "notice": "Gets the currentTime variable set in the Timer."
              },
              "setCurrentTime(uint256)": {
                "notice": "Sets the current time."
              }
            },
            "version": 1
          }
        }
      },
      "contracts/votingTypes/IVoteType.sol": {
        "IVoteType": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                }
              ],
              "name": "consensusReached",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "reached",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "votePassed",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_propID",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_vote",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "_voter",
                  "type": "address"
                }
              ],
              "name": "vote",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "consensusReached(uint256)": "e343409a",
              "vote(uint256,bytes,address)": "f636a053"
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/VoteWeight.sol:48:28:\n   |\n48 |     function getVoteWeight(uint256 _propID, address _voter)\n   |                            ^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 1638,
          "file": "contracts/VoteWeight.sol",
          "start": 1623
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/VoteWeight.sol:69:29:\n   |\n69 |     function getTotalWeight(uint256 _propID) external view override returns (uint256) {\n   |                             ^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 2246,
          "file": "contracts/VoteWeight.sol",
          "start": 2231
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/BaseSystem.sol": {
        "ast": {
          "absolutePath": "contracts/BaseSystem.sol",
          "exportedSymbols": {
            "BaseSystem": [
              58
            ],
            "CoreLib": [
              91
            ],
            "IBooth": [
              209
            ],
            "ICoord": [
              253
            ],
            "ICore": [
              268
            ],
            "IExe": [
              297
            ],
            "IProp": [
              361
            ],
            "IVoteType": [
              652
            ],
            "IWeight": [
              380
            ],
            "Initializable": [
              521
            ],
            "Testable": [
              594
            ],
            "Timer": [
              629
            ]
          },
          "id": 59,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:0"
            },
            {
              "absolutePath": "contracts/CoreLib.sol",
              "file": "./CoreLib.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 92,
              "src": "56:23:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ICore.sol",
              "file": "./interfaces/ICore.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 269,
              "src": "80:32:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ICoord.sol",
              "file": "./interfaces/ICoord.sol",
              "id": 4,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 254,
              "src": "113:33:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IProp.sol",
              "file": "./interfaces/IProp.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 362,
              "src": "147:32:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IExe.sol",
              "file": "./interfaces/IExe.sol",
              "id": 6,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 298,
              "src": "180:31:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IBooth.sol",
              "file": "./interfaces/IBooth.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 210,
              "src": "212:33:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IWeight.sol",
              "file": "./interfaces/IWeight.sol",
              "id": 8,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 381,
              "src": "246:34:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/votingTypes/IVoteType.sol",
              "file": "./votingTypes/IVoteType.sol",
              "id": 9,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 653,
              "src": "281:37:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/openZeppelin/Initializable.sol",
              "file": "./openZeppelin/Initializable.sol",
              "id": 10,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 522,
              "src": "319:42:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/test/Testable.sol",
              "file": "./test/Testable.sol",
              "id": 11,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 59,
              "sourceUnit": 595,
              "src": "362:29:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 12,
                    "name": "Initializable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 521,
                    "src": "425:13:0"
                  },
                  "id": 13,
                  "nodeType": "InheritanceSpecifier",
                  "src": "425:13:0"
                },
                {
                  "baseName": {
                    "id": 14,
                    "name": "Testable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 594,
                    "src": "440:8:0"
                  },
                  "id": 15,
                  "nodeType": "InheritanceSpecifier",
                  "src": "440:8:0"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 58,
              "linearizedBaseContracts": [
                58,
                594,
                521
              ],
              "name": "BaseSystem",
              "nameLocation": "411:10:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "3c9747f3",
                  "id": 17,
                  "mutability": "immutable",
                  "name": "IDENTIFIER",
                  "nameLocation": "480:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "455:35:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "eaddd0fd",
                  "id": 20,
                  "mutability": "immutable",
                  "name": "core_",
                  "nameLocation": "520:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "497:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICore_$268",
                    "typeString": "contract ICore"
                  },
                  "typeName": {
                    "id": 19,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18,
                      "name": "ICore",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 268,
                      "src": "497:5:0"
                    },
                    "referencedDeclaration": 268,
                    "src": "497:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICore_$268",
                      "typeString": "contract ICore"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 33,
                    "nodeType": "Block",
                    "src": "552:95:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_contract$_ICore_$268",
                                "typeString": "contract ICore"
                              },
                              "id": 28,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 24,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "576:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 25,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "576:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 23,
                                  "name": "ICore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 268,
                                  "src": "570:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICore_$268_$",
                                    "typeString": "type(contract ICore)"
                                  }
                                },
                                "id": 26,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "570:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICore_$268",
                                  "typeString": "contract ICore"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 27,
                                "name": "core_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "591:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICore_$268",
                                  "typeString": "contract ICore"
                                }
                              },
                              "src": "570:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53797374656d3a204f6e6c7920636f72652063616e206d6f64696679",
                              "id": 29,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "598:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1d66386c2987cd2d9aab68986d2d1cf4fb5ad3d534ef6d080d2eaf6f5cf0b5bc",
                                "typeString": "literal_string \"System: Only core can modify\""
                              },
                              "value": "System: Only core can modify"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1d66386c2987cd2d9aab68986d2d1cf4fb5ad3d534ef6d080d2eaf6f5cf0b5bc",
                                "typeString": "literal_string \"System: Only core can modify\""
                              }
                            ],
                            "id": 22,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "562:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "562:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31,
                        "nodeType": "ExpressionStatement",
                        "src": "562:67:0"
                      },
                      {
                        "id": 32,
                        "nodeType": "PlaceholderStatement",
                        "src": "639:1:0"
                      }
                    ]
                  },
                  "id": 34,
                  "name": "onlyCore",
                  "nameLocation": "541:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "549:2:0"
                  },
                  "src": "532:115:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 56,
                    "nodeType": "Block",
                    "src": "727:64:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 46,
                            "name": "IDENTIFIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "737:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 47,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "750:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "737:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 49,
                        "nodeType": "ExpressionStatement",
                        "src": "737:17:0"
                      },
                      {
                        "expression": {
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 50,
                            "name": "core_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "764:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICore_$268",
                              "typeString": "contract ICore"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 52,
                                "name": "_core",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "778:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51,
                              "name": "ICore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "772:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICore_$268_$",
                                "typeString": "type(contract ICore)"
                              }
                            },
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "772:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICore_$268",
                              "typeString": "contract ICore"
                            }
                          },
                          "src": "764:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICore_$268",
                            "typeString": "contract ICore"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "764:20:0"
                      }
                    ]
                  },
                  "id": 57,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 43,
                          "name": "_timer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "719:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 44,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 42,
                        "name": "Testable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 594,
                        "src": "710:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "710:16:0"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "673:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 57,
                        "src": "665:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "665:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "_core",
                        "nameLocation": "687:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 57,
                        "src": "679:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "679:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "_timer",
                        "nameLocation": "702:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 57,
                        "src": "694:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "694:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "664:45:0"
                  },
                  "returnParameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "727:0:0"
                  },
                  "scope": 58,
                  "src": "653:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 59,
              "src": "393:400:0",
              "usedErrors": []
            }
          ],
          "src": "32:761:0"
        },
        "id": 0
      },
      "contracts/CoreLib.sol": {
        "ast": {
          "absolutePath": "contracts/CoreLib.sol",
          "exportedSymbols": {
            "CoreLib": [
              91
            ]
          },
          "id": 92,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 60,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 91,
              "linearizedBaseContracts": [
                91
              ],
              "name": "CoreLib",
              "nameLocation": "64:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "6b6c0774",
                  "id": 65,
                  "mutability": "constant",
                  "name": "CORE",
                  "nameLocation": "102:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "78:48:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "78:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "434f5245",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "119:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_907208bc2088fa777f18b43edd8b766e7243504cf8497f7ed936c65c7a446bbc",
                          "typeString": "literal_string \"CORE\""
                        },
                        "value": "CORE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_907208bc2088fa777f18b43edd8b766e7243504cf8497f7ed936c65c7a446bbc",
                          "typeString": "literal_string \"CORE\""
                        }
                      ],
                      "id": 62,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "109:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "109:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "0bd8922d",
                  "id": 70,
                  "mutability": "constant",
                  "name": "COORD",
                  "nameLocation": "156:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "132:56:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "434f4f5244494e41544f52",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "174:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d578563424ab02f85ec03c6b1aee04947ebdd4a30db46cba3bcd7f56ef40b199",
                          "typeString": "literal_string \"COORDINATOR\""
                        },
                        "value": "COORDINATOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d578563424ab02f85ec03c6b1aee04947ebdd4a30db46cba3bcd7f56ef40b199",
                          "typeString": "literal_string \"COORDINATOR\""
                        }
                      ],
                      "id": 67,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "164:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "164:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "e9b67958",
                  "id": 75,
                  "mutability": "constant",
                  "name": "EXE",
                  "nameLocation": "218:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "194:54:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "45584543555441424c4553",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "234:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59e2d72f5870ccddd14d35394bd3c22374071b2da7c07a3d6c3b690400b73628",
                          "typeString": "literal_string \"EXECUTABLES\""
                        },
                        "value": "EXECUTABLES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_59e2d72f5870ccddd14d35394bd3c22374071b2da7c07a3d6c3b690400b73628",
                          "typeString": "literal_string \"EXECUTABLES\""
                        }
                      ],
                      "id": 72,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "224:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "224:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d082009d",
                  "id": 80,
                  "mutability": "constant",
                  "name": "PROPS",
                  "nameLocation": "278:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "254:54:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "50524f504f53414c53",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "296:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36209a57dfd79e3872ec3a0c88c653bbe7e32a12306e5e1f92f118c1936ae8b2",
                          "typeString": "literal_string \"PROPOSALS\""
                        },
                        "value": "PROPOSALS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_36209a57dfd79e3872ec3a0c88c653bbe7e32a12306e5e1f92f118c1936ae8b2",
                          "typeString": "literal_string \"PROPOSALS\""
                        }
                      ],
                      "id": 77,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "286:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "286:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "9a39718b",
                  "id": 85,
                  "mutability": "constant",
                  "name": "VOTE_BOOTH",
                  "nameLocation": "338:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "314:62:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "564f54494e475f424f4f5448",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "361:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_346b2ab3a980432fd8f2e24828fc9f9ee2df1548701bc542f6ec17882b327627",
                          "typeString": "literal_string \"VOTING_BOOTH\""
                        },
                        "value": "VOTING_BOOTH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_346b2ab3a980432fd8f2e24828fc9f9ee2df1548701bc542f6ec17882b327627",
                          "typeString": "literal_string \"VOTING_BOOTH\""
                        }
                      ],
                      "id": 82,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "351:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "351:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "296425b5",
                  "id": 90,
                  "mutability": "constant",
                  "name": "VOTE_WEIGHT",
                  "nameLocation": "406:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "382:62:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "564f54455f574549474854",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "430:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdd7ba10b36b7349d5c9710e5e447ec8acaa8e3cbba8d20f4393eccf61f185b1",
                          "typeString": "literal_string \"VOTE_WEIGHT\""
                        },
                        "value": "VOTE_WEIGHT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cdd7ba10b36b7349d5c9710e5e447ec8acaa8e3cbba8d20f4393eccf61f185b1",
                          "typeString": "literal_string \"VOTE_WEIGHT\""
                        }
                      ],
                      "id": 87,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "420:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "420:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                }
              ],
              "scope": 92,
              "src": "56:391:1",
              "usedErrors": []
            }
          ],
          "src": "32:415:1"
        },
        "id": 1
      },
      "contracts/VoteWeight.sol": {
        "ast": {
          "absolutePath": "contracts/VoteWeight.sol",
          "exportedSymbols": {
            "BaseSystem": [
              58
            ],
            "CoreLib": [
              91
            ],
            "IBooth": [
              209
            ],
            "ICoord": [
              253
            ],
            "ICore": [
              268
            ],
            "IERC20": [
              458
            ],
            "IExe": [
              297
            ],
            "IProp": [
              361
            ],
            "IVoteType": [
              652
            ],
            "IWeight": [
              380
            ],
            "Initializable": [
              521
            ],
            "Testable": [
              594
            ],
            "Timer": [
              629
            ],
            "VoteWeight": [
              197
            ]
          },
          "id": 198,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 93,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:2"
            },
            {
              "absolutePath": "contracts/BaseSystem.sol",
              "file": "./BaseSystem.sol",
              "id": 94,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 198,
              "sourceUnit": 59,
              "src": "56:26:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/openZeppelin/IERC20.sol",
              "file": "./openZeppelin/IERC20.sol",
              "id": 95,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 198,
              "sourceUnit": 459,
              "src": "83:35:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 96,
                    "name": "BaseSystem",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 58,
                    "src": "190:10:2"
                  },
                  "id": 97,
                  "nodeType": "InheritanceSpecifier",
                  "src": "190:10:2"
                },
                {
                  "baseName": {
                    "id": 98,
                    "name": "IWeight",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 380,
                    "src": "202:7:2"
                  },
                  "id": 99,
                  "nodeType": "InheritanceSpecifier",
                  "src": "202:7:2"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 197,
              "linearizedBaseContracts": [
                197,
                380,
                58,
                594,
                521
              ],
              "name": "VoteWeight",
              "nameLocation": "176:10:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "govToken_",
                  "nameLocation": "407:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "392:24:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$458",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 101,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 100,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 458,
                      "src": "392:6:2"
                    },
                    "referencedDeclaration": 458,
                    "src": "392:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$458",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "repToken_",
                  "nameLocation": "437:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "422:24:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$458",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 104,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 103,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 458,
                      "src": "422:6:2"
                    },
                    "referencedDeclaration": 458,
                    "src": "422:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$458",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 118,
                    "nodeType": "Block",
                    "src": "737:2:2",
                    "statements": []
                  },
                  "id": 119,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 112,
                            "name": "CoreLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "697:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CoreLib_$91_$",
                              "typeString": "type(library CoreLib)"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "VOTE_WEIGHT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90,
                          "src": "697:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 114,
                          "name": "_core",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "718:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 115,
                          "name": "_timer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "725:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 116,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 111,
                        "name": "BaseSystem",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "686:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "686:46:2"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "_core",
                        "nameLocation": "655:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "647:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "647:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "_timer",
                        "nameLocation": "670:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "662:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "662:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "646:31:2"
                  },
                  "returnParameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "737:0:2"
                  },
                  "scope": 197,
                  "src": "635:104:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 140,
                    "nodeType": "Block",
                    "src": "844:204:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 128,
                            "name": "govToken_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "854:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$458",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 130,
                                "name": "_govToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 121,
                                "src": "873:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 129,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "866:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$458_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "866:17:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$458",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "854:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$458",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 133,
                        "nodeType": "ExpressionStatement",
                        "src": "854:29:2"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 134,
                            "name": "repToken_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "893:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$458",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 136,
                                "name": "_repToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123,
                                "src": "912:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 135,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "905:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$458_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "905:17:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$458",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "893:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$458",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "893:29:2"
                      }
                    ]
                  },
                  "functionSelector": "ef88bf13",
                  "id": 141,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 126,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 125,
                        "name": "initializer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 520,
                        "src": "828:11:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "828:11:2"
                    }
                  ],
                  "name": "initialise",
                  "nameLocation": "754:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "_govToken",
                        "nameLocation": "773:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 141,
                        "src": "765:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "765:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 123,
                        "mutability": "mutable",
                        "name": "_repToken",
                        "nameLocation": "792:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 141,
                        "src": "784:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "764:38:2"
                  },
                  "returnParameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "844:0:2"
                  },
                  "scope": 197,
                  "src": "745:303:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    372
                  ],
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "1733:468:2",
                    "statements": [
                      {
                        "assignments": [
                          153
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 153,
                            "mutability": "mutable",
                            "name": "voteWeight",
                            "nameLocation": "1943:10:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 174,
                            "src": "1935:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 152,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1935:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 163,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 156,
                                "name": "_voter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 146,
                                "src": "1976:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 154,
                                "name": "govToken_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102,
                                "src": "1956:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$458",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 397,
                              "src": "1956:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1956:27:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 160,
                                "name": "_voter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 146,
                                "src": "2018:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 158,
                                "name": "repToken_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "1998:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$458",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 397,
                              "src": "1998:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1998:27:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1956:69:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1935:90:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 164,
                            "name": "voteWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "2097:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2111:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2097:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 172,
                          "nodeType": "Block",
                          "src": "2153:42:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 170,
                                "name": "voteWeight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "2174:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 151,
                              "id": 171,
                              "nodeType": "Return",
                              "src": "2167:17:2"
                            }
                          ]
                        },
                        "id": 173,
                        "nodeType": "IfStatement",
                        "src": "2093:102:2",
                        "trueBody": {
                          "id": 169,
                          "nodeType": "Block",
                          "src": "2114:33:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2135:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 151,
                              "id": 168,
                              "nodeType": "Return",
                              "src": "2128:8:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 142,
                    "nodeType": "StructuredDocumentation",
                    "src": "1246:349:2",
                    "text": " @param   _propID This lets the vote weight get the correct snapshot for\n          each proposal.\n @param   _voter Address of the voter.\n @notice  The vote weight of the _voter is a simple equation of their\n          governance and reputation token:\n          vote_weight = (gov_token * rep_token) / 2"
                  },
                  "functionSelector": "7eba5573",
                  "id": 175,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVoteWeight",
                  "nameLocation": "1609:13:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 148,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1694:8:2"
                  },
                  "parameters": {
                    "id": 147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "1631:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "1623:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "_voter",
                        "nameLocation": "1648:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "1640:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1640:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:33:2"
                  },
                  "returnParameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "1720:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1720:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1719:9:2"
                  },
                  "scope": 197,
                  "src": "1600:601:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    379
                  ],
                  "body": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "2289:184:2",
                    "statements": [
                      {
                        "assignments": [
                          184
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 184,
                            "mutability": "mutable",
                            "name": "total",
                            "nameLocation": "2387:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 195,
                            "src": "2379:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 183,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2379:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 192,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 185,
                                "name": "govToken_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102,
                                "src": "2395:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$458",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalSupply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 389,
                              "src": "2395:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2395:23:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 188,
                                "name": "repToken_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "2421:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$458",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalSupply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 389,
                              "src": "2421:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2421:23:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2395:49:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2379:65:2"
                      },
                      {
                        "expression": {
                          "id": 193,
                          "name": "total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "2461:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 182,
                        "id": 194,
                        "nodeType": "Return",
                        "src": "2454:12:2"
                      }
                    ]
                  },
                  "functionSelector": "2434c5bd",
                  "id": 196,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalWeight",
                  "nameLocation": "2216:14:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 179,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2262:8:2"
                  },
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "2239:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "2231:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2231:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2230:17:2"
                  },
                  "returnParameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "2280:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2280:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2279:9:2"
                  },
                  "scope": 197,
                  "src": "2207:266:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 198,
              "src": "167:2308:2",
              "usedErrors": []
            }
          ],
          "src": "32:2444:2"
        },
        "id": 2
      },
      "contracts/interfaces/IBooth.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IBooth.sol",
          "exportedSymbols": {
            "IBooth": [
              209
            ]
          },
          "id": 210,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 199,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 209,
              "linearizedBaseContracts": [
                209
              ],
              "name": "IBooth",
              "nameLocation": "66:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "e343409a",
                  "id": 208,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "consensusReached",
                  "nameLocation": "88:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "113:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "105:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "105:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "104:17:3"
                  },
                  "returnParameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "reached",
                        "nameLocation": "174:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "169:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "169:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "votePassed",
                        "nameLocation": "188:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "183:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "183:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "168:31:3"
                  },
                  "scope": 209,
                  "src": "79:121:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 210,
              "src": "56:146:3",
              "usedErrors": []
            }
          ],
          "src": "32:170:3"
        },
        "id": 3
      },
      "contracts/interfaces/ICoord.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ICoord.sol",
          "exportedSymbols": {
            "ICoord": [
              253
            ]
          },
          "id": 254,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 211,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 253,
              "linearizedBaseContracts": [
                253
              ],
              "name": "ICoord",
              "nameLocation": "66:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "701370dc",
                  "id": 220,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSubSystem",
                  "nameLocation": "88:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 213,
                        "mutability": "mutable",
                        "name": "_system",
                        "nameLocation": "109:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "101:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "101:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "_subIdentifier",
                        "nameLocation": "126:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "118:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "118:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "100:41:4"
                  },
                  "returnParameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "189:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "189:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "188:9:4"
                  },
                  "scope": 253,
                  "src": "79:119:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "299ba15f",
                  "id": 227,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isVotable",
                  "nameLocation": "213:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "231:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "223:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "223:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "222:17:4"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "263:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "263:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "262:6:4"
                  },
                  "scope": 253,
                  "src": "204:65:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "38c68782",
                  "id": 234,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addSubSystem",
                  "nameLocation": "284:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "_subIdentifier",
                        "nameLocation": "305:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 234,
                        "src": "297:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "297:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "_subImplementation",
                        "nameLocation": "329:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 234,
                        "src": "321:26:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "321:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "296:52:4"
                  },
                  "returnParameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "365:0:4"
                  },
                  "scope": 253,
                  "src": "275:91:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fd4a77f1",
                  "id": 239,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "voting",
                  "nameLocation": "381:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "396:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "388:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "388:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "387:17:4"
                  },
                  "returnParameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "413:0:4"
                  },
                  "scope": 253,
                  "src": "372:42:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 240,
                    "nodeType": "StructuredDocumentation",
                    "src": "420:633:4",
                    "text": " @param   _exeID ID of the executable to check.\n @notice  This function will check that the specified proposal has reached\n          quorum, and that it has passed. If the proposal has not reached\n          quorum or has not passed this will return false.\n @dev     The reason we use Exe IDs here and not Prop IDs is that\n          executables may be valid for execution outside of a proposal\n          (e.g an approved recurring payment). If the exe is tied to a\n          proposal the coordinator will be able to look up and verify it's\n          executable status."
                  },
                  "functionSelector": "9cf782cb",
                  "id": 247,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isExecutable",
                  "nameLocation": "1067:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "_exeID",
                        "nameLocation": "1088:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "1080:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1080:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1079:16:4"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "1119:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1119:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1118:6:4"
                  },
                  "scope": 253,
                  "src": "1058:67:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7526bd9b",
                  "id": 252,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setExecute",
                  "nameLocation": "1140:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "_exeID",
                        "nameLocation": "1159:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "1151:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1151:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1150:16:4"
                  },
                  "returnParameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1175:0:4"
                  },
                  "scope": 253,
                  "src": "1131:45:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 254,
              "src": "56:1122:4",
              "usedErrors": []
            }
          ],
          "src": "32:1146:4"
        },
        "id": 4
      },
      "contracts/interfaces/ICore.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ICore.sol",
          "exportedSymbols": {
            "ICore": [
              268
            ]
          },
          "id": 269,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 255,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 268,
              "linearizedBaseContracts": [
                268
              ],
              "name": "ICore",
              "nameLocation": "66:5:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "624a23e0",
                  "id": 262,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInstance",
                  "nameLocation": "87:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "107:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "99:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "99:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "98:14:5"
                  },
                  "returnParameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 260,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "136:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "136:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "135:9:5"
                  },
                  "scope": 268,
                  "src": "78:67:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3c9747f3",
                  "id": 267,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "IDENTIFIER",
                  "nameLocation": "160:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "170:2:5"
                  },
                  "returnParameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "195:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 264,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "195:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "194:9:5"
                  },
                  "scope": 268,
                  "src": "151:53:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 269,
              "src": "56:150:5",
              "usedErrors": []
            }
          ],
          "src": "32:174:5"
        },
        "id": 5
      },
      "contracts/interfaces/IExe.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IExe.sol",
          "exportedSymbols": {
            "IExe": [
              297
            ]
          },
          "id": 298,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 270,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 297,
              "linearizedBaseContracts": [
                297
              ],
              "name": "IExe",
              "nameLocation": "66:4:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 271,
                    "nodeType": "StructuredDocumentation",
                    "src": "77:401:6",
                    "text": " @param   _exeID ID of the executable to get the data of.\n @return  targets The array of target addresses.\n @return  callData The array of calldata to execute at each address.\n @return  values The array of values (in native tokens) to pass through\n          with each call. Note that these values are outside of any gas\n          requirements and costs."
                  },
                  "functionSelector": "971aa75e",
                  "id": 285,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getExe",
                  "nameLocation": "492:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "_exeID",
                        "nameLocation": "507:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "499:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "499:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "498:16:6"
                  },
                  "returnParameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "targets",
                        "nameLocation": "592:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "575:24:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 275,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "575:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 276,
                          "nodeType": "ArrayTypeName",
                          "src": "575:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 280,
                        "mutability": "mutable",
                        "name": "callData",
                        "nameLocation": "628:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "613:23:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 278,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "613:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 279,
                          "nodeType": "ArrayTypeName",
                          "src": "613:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "667:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "650:23:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 281,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "650:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 282,
                          "nodeType": "ArrayTypeName",
                          "src": "650:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "561:122:6"
                  },
                  "scope": 297,
                  "src": "483:201:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "295adadf",
                  "id": 296,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPropExe",
                  "nameLocation": "699:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 292,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "730:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "722:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "722:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "_exeID",
                        "nameLocation": "755:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "747:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "747:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 291,
                        "mutability": "mutable",
                        "name": "_description",
                        "nameLocation": "785:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "771:26:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "771:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "712:91:6"
                  },
                  "returnParameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "propExeID",
                        "nameLocation": "830:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "822:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:19:6"
                  },
                  "scope": 297,
                  "src": "690:151:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 298,
              "src": "56:787:6",
              "usedErrors": []
            }
          ],
          "src": "32:811:6"
        },
        "id": 6
      },
      "contracts/interfaces/IProp.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IProp.sol",
          "exportedSymbols": {
            "IProp": [
              361
            ]
          },
          "id": 362,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 299,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 361,
              "linearizedBaseContracts": [
                361
              ],
              "name": "IProp",
              "nameLocation": "66:5:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "0062104a",
                  "id": 306,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVoteType",
                  "nameLocation": "87:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "107:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "99:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "99:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "98:17:7"
                  },
                  "returnParameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 304,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "139:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "139:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "138:9:7"
                  },
                  "scope": 361,
                  "src": "78:70:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IProp.PropStatus",
                  "id": 314,
                  "members": [
                    {
                      "id": 307,
                      "name": "NO_PROP",
                      "nameLocation": "180:7:7",
                      "nodeType": "EnumValue",
                      "src": "180:7:7"
                    },
                    {
                      "id": 308,
                      "name": "CREATED",
                      "nameLocation": "197:7:7",
                      "nodeType": "EnumValue",
                      "src": "197:7:7"
                    },
                    {
                      "id": 309,
                      "name": "VOTING",
                      "nameLocation": "214:6:7",
                      "nodeType": "EnumValue",
                      "src": "214:6:7"
                    },
                    {
                      "id": 310,
                      "name": "QUEUED",
                      "nameLocation": "230:6:7",
                      "nodeType": "EnumValue",
                      "src": "230:6:7"
                    },
                    {
                      "id": 311,
                      "name": "EXECUTED",
                      "nameLocation": "246:8:7",
                      "nodeType": "EnumValue",
                      "src": "246:8:7"
                    },
                    {
                      "id": 312,
                      "name": "EXPIRED",
                      "nameLocation": "264:7:7",
                      "nodeType": "EnumValue",
                      "src": "264:7:7"
                    },
                    {
                      "id": 313,
                      "name": "DEFEATED",
                      "nameLocation": "281:8:7",
                      "nodeType": "EnumValue",
                      "src": "281:8:7"
                    }
                  ],
                  "name": "PropStatus",
                  "nameLocation": "159:10:7",
                  "nodeType": "EnumDefinition",
                  "src": "154:210:7"
                },
                {
                  "functionSelector": "a6640e4c",
                  "id": 328,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPropVotables",
                  "nameLocation": "379:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "403:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "395:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "395:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "394:17:7"
                  },
                  "returnParameters": {
                    "id": 327,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "mutability": "mutable",
                        "name": "state",
                        "nameLocation": "483:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "472:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PropStatus_$314",
                          "typeString": "enum IProp.PropStatus"
                        },
                        "typeName": {
                          "id": 319,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 318,
                            "name": "PropStatus",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 314,
                            "src": "472:10:7"
                          },
                          "referencedDeclaration": 314,
                          "src": "472:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PropStatus_$314",
                            "typeString": "enum IProp.PropStatus"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "voteStart",
                        "nameLocation": "510:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "502:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "502:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "voteEnd",
                        "nameLocation": "541:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "533:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "533:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 326,
                        "mutability": "mutable",
                        "name": "executedOrCanceled",
                        "nameLocation": "567:18:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "562:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "562:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "458:137:7"
                  },
                  "scope": 361,
                  "src": "370:226:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9e34fa6a",
                  "id": 335,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPropOfExe",
                  "nameLocation": "611:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 331,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "_exeID",
                        "nameLocation": "632:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "624:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "623:16:7"
                  },
                  "returnParameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "663:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "663:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "662:9:7"
                  },
                  "scope": 361,
                  "src": "602:70:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "77e4b811",
                  "id": 340,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "propVoting",
                  "nameLocation": "687:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "706:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "698:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "698:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "697:17:7"
                  },
                  "returnParameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "723:0:7"
                  },
                  "scope": 361,
                  "src": "678:46:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7ef966e4",
                  "id": 345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "propExpire",
                  "nameLocation": "739:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "758:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "750:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "750:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "749:17:7"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:0:7"
                  },
                  "scope": 361,
                  "src": "730:46:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f40507ac",
                  "id": 350,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "propDefeated",
                  "nameLocation": "791:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "812:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "804:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "804:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "803:17:7"
                  },
                  "returnParameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "829:0:7"
                  },
                  "scope": 361,
                  "src": "782:48:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "cd39ebfd",
                  "id": 355,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "propQueued",
                  "nameLocation": "845:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 353,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "864:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "856:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "856:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "855:17:7"
                  },
                  "returnParameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "881:0:7"
                  },
                  "scope": 361,
                  "src": "836:46:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b7abd803",
                  "id": 360,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "propExecuted",
                  "nameLocation": "897:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "918:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "910:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "910:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "909:17:7"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "935:0:7"
                  },
                  "scope": 361,
                  "src": "888:48:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 362,
              "src": "56:882:7",
              "usedErrors": []
            }
          ],
          "src": "32:906:7"
        },
        "id": 7
      },
      "contracts/interfaces/IWeight.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IWeight.sol",
          "exportedSymbols": {
            "IWeight": [
              380
            ]
          },
          "id": 381,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 363,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:8"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 380,
              "linearizedBaseContracts": [
                380
              ],
              "name": "IWeight",
              "nameLocation": "66:7:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "7eba5573",
                  "id": 372,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVoteWeight",
                  "nameLocation": "89:13:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 365,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "111:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "103:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 364,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "103:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "_voter",
                        "nameLocation": "128:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "120:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "120:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "102:33:8"
                  },
                  "returnParameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 370,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "170:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 369,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "170:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "169:9:8"
                  },
                  "scope": 380,
                  "src": "80:99:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2434c5bd",
                  "id": 379,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalWeight",
                  "nameLocation": "194:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "217:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "209:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "209:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "208:17:8"
                  },
                  "returnParameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "249:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "249:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "248:9:8"
                  },
                  "scope": 380,
                  "src": "185:73:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 381,
              "src": "56:204:8",
              "usedErrors": []
            }
          ],
          "src": "32:228:8"
        },
        "id": 8
      },
      "contracts/openZeppelin/IERC20.sol": {
        "ast": {
          "absolutePath": "contracts/openZeppelin/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              458
            ]
          },
          "id": 459,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 382,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 383,
                "nodeType": "StructuredDocumentation",
                "src": "56:70:9",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 458,
              "linearizedBaseContracts": [
                458
              ],
              "name": "IERC20",
              "nameLocation": "137:6:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 384,
                    "nodeType": "StructuredDocumentation",
                    "src": "150:66:9",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 389,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "230:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "241:2:9"
                  },
                  "returnParameters": {
                    "id": 388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 387,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "267:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "267:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "266:9:9"
                  },
                  "scope": 458,
                  "src": "221:55:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 390,
                    "nodeType": "StructuredDocumentation",
                    "src": "282:72:9",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 397,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "368:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 392,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "386:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "378:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "378:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "377:17:9"
                  },
                  "returnParameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "418:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "418:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "417:9:9"
                  },
                  "scope": 458,
                  "src": "359:68:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 398,
                    "nodeType": "StructuredDocumentation",
                    "src": "433:209:9",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 407,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "656:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 403,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 400,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "673:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 407,
                        "src": "665:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 399,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "665:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 402,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "692:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 407,
                        "src": "684:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "664:35:9"
                  },
                  "returnParameters": {
                    "id": 406,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 407,
                        "src": "718:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "718:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "717:6:9"
                  },
                  "scope": 458,
                  "src": "647:77:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 408,
                    "nodeType": "StructuredDocumentation",
                    "src": "730:264:9",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 417,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1008:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1026:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "1018:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1018:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1041:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "1033:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1033:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1017:32:9"
                  },
                  "returnParameters": {
                    "id": 416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "1073:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1072:9:9"
                  },
                  "scope": 458,
                  "src": "999:83:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 418,
                    "nodeType": "StructuredDocumentation",
                    "src": "1088:642:9",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 427,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1744:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 423,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 420,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1760:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "1752:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 419,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1752:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 422,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1777:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "1769:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 421,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1769:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1751:33:9"
                  },
                  "returnParameters": {
                    "id": 426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 425,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "1803:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1803:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1802:6:9"
                  },
                  "scope": 458,
                  "src": "1735:74:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 428,
                    "nodeType": "StructuredDocumentation",
                    "src": "1815:296:9",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 439,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2125:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2155:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "2147:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2147:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 432,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2179:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "2171:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2171:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2206:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "2198:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2198:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2137:81:9"
                  },
                  "returnParameters": {
                    "id": 438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 437,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "2237:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2237:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2236:6:9"
                  },
                  "scope": 458,
                  "src": "2116:127:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 440,
                    "nodeType": "StructuredDocumentation",
                    "src": "2249:158:9",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 448,
                  "name": "Transfer",
                  "nameLocation": "2418:8:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2443:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "2427:20:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2427:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 444,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2465:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "2449:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2449:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 446,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2477:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "2469:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2426:57:9"
                  },
                  "src": "2412:72:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 449,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:148:9",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 457,
                  "name": "Approval",
                  "nameLocation": "2649:8:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 451,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2674:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "2658:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2658:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 453,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2697:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "2681:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2681:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2714:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "2706:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2706:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2657:63:9"
                  },
                  "src": "2643:78:9"
                }
              ],
              "scope": 459,
              "src": "127:2596:9",
              "usedErrors": []
            }
          ],
          "src": "32:2692:9"
        },
        "id": 9
      },
      "contracts/openZeppelin/Initializable.sol": {
        "ast": {
          "absolutePath": "contracts/openZeppelin/Initializable.sol",
          "exportedSymbols": {
            "Initializable": [
              521
            ]
          },
          "id": 522,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 460,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:10"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 461,
                "nodeType": "StructuredDocumentation",
                "src": "527:1096:10",
                "text": " @dev     This is a base contract to aid in writing upgradeable contracts, or \n          any kind of contract that will be deployed behind a proxy. Since a \n          proxied contract can't have a constructor, it's common to move \n          constructor logic to an external initializer function, usually \n          called `initialize`. It then becomes necessary to protect this \n          initializer function so it can only be called once. The \n          {initializer} modifier provided by this contract will have this \n          effect.\n TIP:     To avoid leaving the proxy in an uninitialized state, the \n          initializer function should be called as early as possible by \n          providing the encoded function call as the `_data` argument to \n          {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke \n          a parent initializer twice, or to ensure that all initializers are \n          idempotent. This is not verified automatically as constructors are \n          by Solidity."
              },
              "fullyImplemented": true,
              "id": 521,
              "linearizedBaseContracts": [
                521
              ],
              "name": "Initializable",
              "nameLocation": "1642:13:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "initialized_",
                  "nameLocation": "1732:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "1719:25:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "initializing_",
                  "nameLocation": "1839:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "1826:26:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "deployer_",
                  "nameLocation": "1988:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "1972:25:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1972:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 475,
                    "nodeType": "Block",
                    "src": "2075:39:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 470,
                            "name": "deployer_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "2085:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 471,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2097:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2097:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2085:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 474,
                        "nodeType": "ExpressionStatement",
                        "src": "2085:22:10"
                      }
                    ]
                  },
                  "id": 476,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 468,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2072:2:10"
                  },
                  "returnParameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2075:0:10"
                  },
                  "scope": 521,
                  "src": "2061:53:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 519,
                    "nodeType": "Block",
                    "src": "2314:440:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 480,
                                "name": "initializing_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 465,
                                "src": "2345:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "id": 482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "2362:13:10",
                                "subExpression": {
                                  "id": 481,
                                  "name": "initialized_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 463,
                                  "src": "2363:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2345:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e69743a20436f6e747261637420697320696e697469616c697a6564",
                              "id": 484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2389:31:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f",
                                "typeString": "literal_string \"Init: Contract is initialized\""
                              },
                              "value": "Init: Contract is initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_44d96d1031968061002885f55b802c3df0c5a2f4d2fc92a5262a4d7c1805144f",
                                "typeString": "literal_string \"Init: Contract is initialized\""
                              }
                            ],
                            "id": 479,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2324:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2324:106:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 486,
                        "nodeType": "ExpressionStatement",
                        "src": "2324:106:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 488,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2448:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2448:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 490,
                                "name": "deployer_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 467,
                                "src": "2462:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2448:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e69743a204f6e6c79206465706c6f7965722063616e20696e6974",
                              "id": 492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2473:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0",
                                "typeString": "literal_string \"Init: Only deployer can init\""
                              },
                              "value": "Init: Only deployer can init"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0e2f2e015d4f3f37422f07799b9c9c6d10977a9773c2155e1263d609dc3872c0",
                                "typeString": "literal_string \"Init: Only deployer can init\""
                              }
                            ],
                            "id": 487,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2440:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2440:64:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 494,
                        "nodeType": "ExpressionStatement",
                        "src": "2440:64:10"
                      },
                      {
                        "assignments": [
                          496
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 496,
                            "mutability": "mutable",
                            "name": "isTopLevelCall",
                            "nameLocation": "2520:14:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 519,
                            "src": "2515:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 495,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2515:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 499,
                        "initialValue": {
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2537:14:10",
                          "subExpression": {
                            "id": 497,
                            "name": "initializing_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "2538:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2515:36:10"
                      },
                      {
                        "condition": {
                          "id": 500,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "2566:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 510,
                        "nodeType": "IfStatement",
                        "src": "2562:98:10",
                        "trueBody": {
                          "id": 509,
                          "nodeType": "Block",
                          "src": "2582:78:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 501,
                                  "name": "initializing_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 465,
                                  "src": "2596:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2612:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2596:20:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 504,
                              "nodeType": "ExpressionStatement",
                              "src": "2596:20:10"
                            },
                            {
                              "expression": {
                                "id": 507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 505,
                                  "name": "initialized_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 463,
                                  "src": "2630:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 506,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2645:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2630:19:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 508,
                              "nodeType": "ExpressionStatement",
                              "src": "2630:19:10"
                            }
                          ]
                        }
                      },
                      {
                        "id": 511,
                        "nodeType": "PlaceholderStatement",
                        "src": "2670:1:10"
                      },
                      {
                        "condition": {
                          "id": 512,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "2686:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 518,
                        "nodeType": "IfStatement",
                        "src": "2682:66:10",
                        "trueBody": {
                          "id": 517,
                          "nodeType": "Block",
                          "src": "2702:46:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 513,
                                  "name": "initializing_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 465,
                                  "src": "2716:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 514,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2732:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "2716:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 516,
                              "nodeType": "ExpressionStatement",
                              "src": "2716:21:10"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 477,
                    "nodeType": "StructuredDocumentation",
                    "src": "2120:166:10",
                    "text": " @dev     Modifier to protect an initializer function from being invoked \n          twice. Has been modified so only deployer can initialise. "
                  },
                  "id": 520,
                  "name": "initializer",
                  "nameLocation": "2300:11:10",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 478,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2311:2:10"
                  },
                  "src": "2291:463:10",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 522,
              "src": "1624:1132:10",
              "usedErrors": []
            }
          ],
          "src": "32:2725:10"
        },
        "id": 10
      },
      "contracts/test/Testable.sol": {
        "ast": {
          "absolutePath": "contracts/test/Testable.sol",
          "exportedSymbols": {
            "Testable": [
              594
            ],
            "Timer": [
              629
            ]
          },
          "id": 595,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 523,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:11"
            },
            {
              "absolutePath": "contracts/test/Timer.sol",
              "file": "./Timer.sol",
              "id": 524,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 595,
              "sourceUnit": 630,
              "src": "56:21:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 525,
                "nodeType": "StructuredDocumentation",
                "src": "79:94:11",
                "text": " @title Base class that provides time overrides, but only if being run in test mode."
              },
              "fullyImplemented": true,
              "id": 594,
              "linearizedBaseContracts": [
                594
              ],
              "name": "Testable",
              "nameLocation": "192:8:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "1c39c38d",
                  "id": 527,
                  "mutability": "mutable",
                  "name": "timerAddress",
                  "nameLocation": "395:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "380:27:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 537,
                    "nodeType": "Block",
                    "src": "707:45:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 533,
                            "name": "timerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "717:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 534,
                            "name": "_timerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "732:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "717:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 536,
                        "nodeType": "ExpressionStatement",
                        "src": "717:28:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 528,
                    "nodeType": "StructuredDocumentation",
                    "src": "414:253:11",
                    "text": " @notice Constructs the Testable contract. Called by child contracts.\n @param _timerAddress Contract that stores the current time in a testing environment.\n Must be set to 0x0 for production environments that use live time."
                  },
                  "id": 538,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "_timerAddress",
                        "nameLocation": "692:13:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "684:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "683:23:11"
                  },
                  "returnParameters": {
                    "id": 532,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "707:0:11"
                  },
                  "scope": 594,
                  "src": "672:80:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 551,
                    "nodeType": "Block",
                    "src": "846:65:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 542,
                                "name": "timerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "864:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "307830",
                                    "id": 545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "888:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 544,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "880:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 543,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "880:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "880:12:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "864:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 541,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "856:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "856:37:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 549,
                        "nodeType": "ExpressionStatement",
                        "src": "856:37:11"
                      },
                      {
                        "id": 550,
                        "nodeType": "PlaceholderStatement",
                        "src": "903:1:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 539,
                    "nodeType": "StructuredDocumentation",
                    "src": "758:63:11",
                    "text": " @notice Reverts if not running in test mode."
                  },
                  "id": 552,
                  "name": "onlyIfTest",
                  "nameLocation": "835:10:11",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 540,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "846:0:11"
                  },
                  "src": "826:85:11",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 567,
                    "nodeType": "Block",
                    "src": "1144:57:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 564,
                              "name": "time",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 555,
                              "src": "1189:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 561,
                                  "name": "timerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 527,
                                  "src": "1160:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 560,
                                "name": "Timer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 629,
                                "src": "1154:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Timer_$629_$",
                                  "typeString": "type(contract Timer)"
                                }
                              },
                              "id": 562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1154:19:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Timer_$629",
                                "typeString": "contract Timer"
                              }
                            },
                            "id": 563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setCurrentTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 619,
                            "src": "1154:34:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1154:40:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 566,
                        "nodeType": "ExpressionStatement",
                        "src": "1154:40:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 553,
                    "nodeType": "StructuredDocumentation",
                    "src": "917:164:11",
                    "text": " @notice Sets the current time.\n @dev Will revert if not running in test mode.\n @param time timestamp to set current Testable time to."
                  },
                  "functionSelector": "22f8e566",
                  "id": 568,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 558,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 557,
                        "name": "onlyIfTest",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 552,
                        "src": "1133:10:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1133:10:11"
                    }
                  ],
                  "name": "setCurrentTime",
                  "nameLocation": "1095:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "time",
                        "nameLocation": "1118:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 568,
                        "src": "1110:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1110:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1109:14:11"
                  },
                  "returnParameters": {
                    "id": 559,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1144:0:11"
                  },
                  "scope": 594,
                  "src": "1086:115:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 592,
                    "nodeType": "Block",
                    "src": "1502:212:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 574,
                            "name": "timerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "1516:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "307830",
                                "id": 577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1540:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0x0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1532:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 575,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1532:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1532:12:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1516:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 590,
                          "nodeType": "Block",
                          "src": "1620:88:11",
                          "statements": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 587,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "1641:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "1641:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 573,
                              "id": 589,
                              "nodeType": "Return",
                              "src": "1634:22:11"
                            }
                          ]
                        },
                        "id": 591,
                        "nodeType": "IfStatement",
                        "src": "1512:196:11",
                        "trueBody": {
                          "id": 586,
                          "nodeType": "Block",
                          "src": "1546:68:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 581,
                                        "name": "timerAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 527,
                                        "src": "1573:12:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 580,
                                      "name": "Timer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 629,
                                      "src": "1567:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Timer_$629_$",
                                        "typeString": "type(contract Timer)"
                                      }
                                    },
                                    "id": 582,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1567:19:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Timer_$629",
                                      "typeString": "contract Timer"
                                    }
                                  },
                                  "id": 583,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getCurrentTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 628,
                                  "src": "1567:34:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1567:36:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 573,
                              "id": 585,
                              "nodeType": "Return",
                              "src": "1560:43:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 569,
                    "nodeType": "StructuredDocumentation",
                    "src": "1207:234:11",
                    "text": " @notice Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode.\n Otherwise, it will return the block timestamp.\n @return uint for the current Testable timestamp."
                  },
                  "functionSelector": "29cb924d",
                  "id": 593,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentTime",
                  "nameLocation": "1455:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 570,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1469:2:11"
                  },
                  "returnParameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 572,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "1493:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1493:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1492:9:11"
                  },
                  "scope": 594,
                  "src": "1446:268:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 595,
              "src": "174:1542:11",
              "usedErrors": []
            }
          ],
          "src": "32:1684:11"
        },
        "id": 11
      },
      "contracts/test/Timer.sol": {
        "ast": {
          "absolutePath": "contracts/test/Timer.sol",
          "exportedSymbols": {
            "Timer": [
              629
            ]
          },
          "id": 630,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 596,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 597,
                "nodeType": "StructuredDocumentation",
                "src": "56:84:12",
                "text": " @title Universal store of current contract time for testing environments."
              },
              "fullyImplemented": true,
              "id": 629,
              "linearizedBaseContracts": [
                629
              ],
              "name": "Timer",
              "nameLocation": "150:5:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "currentTime",
                  "nameLocation": "178:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "162:27:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "162:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 607,
                    "nodeType": "Block",
                    "src": "210:87:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 602,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "220:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 603,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "234:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "234:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "220:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 606,
                        "nodeType": "ExpressionStatement",
                        "src": "220:29:12"
                      }
                    ]
                  },
                  "id": 608,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 600,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "207:2:12"
                  },
                  "returnParameters": {
                    "id": 601,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "210:0:12"
                  },
                  "scope": 629,
                  "src": "196:101:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 618,
                    "nodeType": "Block",
                    "src": "511:35:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 614,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "521:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 615,
                            "name": "time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "535:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "521:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 617,
                        "nodeType": "ExpressionStatement",
                        "src": "521:18:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 609,
                    "nodeType": "StructuredDocumentation",
                    "src": "303:156:12",
                    "text": " @notice Sets the current time.\n @dev Will revert if not running in test mode.\n @param time timestamp to set `currentTime` to."
                  },
                  "functionSelector": "22f8e566",
                  "id": 619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setCurrentTime",
                  "nameLocation": "473:14:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "time",
                        "nameLocation": "496:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "488:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "488:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "487:14:12"
                  },
                  "returnParameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "511:0:12"
                  },
                  "scope": 629,
                  "src": "464:82:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 627,
                    "nodeType": "Block",
                    "src": "746:35:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 625,
                          "name": "currentTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 599,
                          "src": "763:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 624,
                        "id": 626,
                        "nodeType": "Return",
                        "src": "756:18:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 620,
                    "nodeType": "StructuredDocumentation",
                    "src": "552:133:12",
                    "text": " @notice Gets the currentTime variable set in the Timer.\n @return uint256 for the current Testable timestamp."
                  },
                  "functionSelector": "29cb924d",
                  "id": 628,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentTime",
                  "nameLocation": "699:14:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "713:2:12"
                  },
                  "returnParameters": {
                    "id": 624,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "737:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "737:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "736:9:12"
                  },
                  "scope": 629,
                  "src": "690:91:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 630,
              "src": "141:642:12",
              "usedErrors": []
            }
          ],
          "src": "32:751:12"
        },
        "id": 12
      },
      "contracts/votingTypes/IVoteType.sol": {
        "ast": {
          "absolutePath": "contracts/votingTypes/IVoteType.sol",
          "exportedSymbols": {
            "IVoteType": [
              652
            ]
          },
          "id": 653,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 631,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 652,
              "linearizedBaseContracts": [
                652
              ],
              "name": "IVoteType",
              "nameLocation": "65:9:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "f636a053",
                  "id": 642,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "vote",
                  "nameLocation": "90:4:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 638,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 633,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "103:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "95:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "95:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "_vote",
                        "nameLocation": "125:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "112:18:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "112:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 637,
                        "mutability": "mutable",
                        "name": "_voter",
                        "nameLocation": "140:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "132:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "132:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "94:53:13"
                  },
                  "returnParameters": {
                    "id": 641,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 640,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "165:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 639,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "165:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "164:6:13"
                  },
                  "scope": 652,
                  "src": "81:90:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e343409a",
                  "id": 651,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "consensusReached",
                  "nameLocation": "186:16:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "_propID",
                        "nameLocation": "211:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "203:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "203:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "202:17:13"
                  },
                  "returnParameters": {
                    "id": 650,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 647,
                        "mutability": "mutable",
                        "name": "reached",
                        "nameLocation": "272:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "267:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 646,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "267:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 649,
                        "mutability": "mutable",
                        "name": "votePassed",
                        "nameLocation": "286:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "281:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "281:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "266:31:13"
                  },
                  "scope": 652,
                  "src": "177:121:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 653,
              "src": "55:245:13",
              "usedErrors": []
            }
          ],
          "src": "32:268:13"
        },
        "id": 13
      }
    }
  }
}
